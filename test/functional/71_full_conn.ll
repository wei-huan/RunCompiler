; ModuleID = 'test/functional//71_full_conn.c'
source_filename = "test/functional//71_full_conn.c"
target datalayout = "e-m:o-p270:32:32-p271:32:32-p272:64:64-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-apple-macosx12.0.0"

%struct.timeval = type { i64, i32 }

@_sysy_start = common global %struct.timeval zeroinitializer, align 8
@_sysy_end = common global %struct.timeval zeroinitializer, align 8
@_sysy_l1 = common global [1024 x i32] zeroinitializer, align 16
@_sysy_l2 = common global [1024 x i32] zeroinitializer, align 16
@_sysy_h = common global [1024 x i32] zeroinitializer, align 16
@_sysy_m = common global [1024 x i32] zeroinitializer, align 16
@_sysy_s = common global [1024 x i32] zeroinitializer, align 16
@_sysy_us = common global [1024 x i32] zeroinitializer, align 16
@_sysy_idx = common global i32 0, align 4

; Function Attrs: noinline nounwind ssp uwtable
define i32 @relu_reg(i32 %0) #0 {
  %2 = alloca i32, align 4
  %3 = alloca i32, align 4
  store i32 %0, i32* %3, align 4
  %4 = load i32, i32* %3, align 4
  %5 = icmp sgt i32 %4, 127
  br i1 %5, label %6, label %7

6:                                                ; preds = %1
  store i32 127, i32* %2, align 4
  br label %13

7:                                                ; preds = %1
  %8 = load i32, i32* %3, align 4
  %9 = icmp slt i32 %8, 0
  br i1 %9, label %10, label %11

10:                                               ; preds = %7
  store i32 0, i32* %2, align 4
  br label %13

11:                                               ; preds = %7
  %12 = load i32, i32* %3, align 4
  store i32 %12, i32* %2, align 4
  br label %13

13:                                               ; preds = %11, %10, %6
  %14 = load i32, i32* %2, align 4
  ret i32 %14
}

; Function Attrs: noinline nounwind ssp uwtable
define i32 @model([5 x i32]* %0) #0 {
  %2 = alloca i32, align 4
  %3 = alloca [5 x i32]*, align 8
  store [5 x i32]* %0, [5 x i32]** %3, align 8
  %4 = load [5 x i32]*, [5 x i32]** %3, align 8
  %5 = getelementptr inbounds [5 x i32], [5 x i32]* %4, i64 0
  %6 = getelementptr inbounds [5 x i32], [5 x i32]* %5, i64 0, i64 0
  %7 = load i32, i32* %6, align 4
  %8 = mul nsw i32 %7, 85
  %9 = load [5 x i32]*, [5 x i32]** %3, align 8
  %10 = getelementptr inbounds [5 x i32], [5 x i32]* %9, i64 0
  %11 = getelementptr inbounds [5 x i32], [5 x i32]* %10, i64 0, i64 1
  %12 = load i32, i32* %11, align 4
  %13 = mul nsw i32 %12, 23
  %14 = add nsw i32 %8, %13
  %15 = load [5 x i32]*, [5 x i32]** %3, align 8
  %16 = getelementptr inbounds [5 x i32], [5 x i32]* %15, i64 0
  %17 = getelementptr inbounds [5 x i32], [5 x i32]* %16, i64 0, i64 2
  %18 = load i32, i32* %17, align 4
  %19 = mul nsw i32 %18, -82
  %20 = add nsw i32 %14, %19
  %21 = load [5 x i32]*, [5 x i32]** %3, align 8
  %22 = getelementptr inbounds [5 x i32], [5 x i32]* %21, i64 0
  %23 = getelementptr inbounds [5 x i32], [5 x i32]* %22, i64 0, i64 3
  %24 = load i32, i32* %23, align 4
  %25 = mul nsw i32 %24, -103
  %26 = add nsw i32 %20, %25
  %27 = load [5 x i32]*, [5 x i32]** %3, align 8
  %28 = getelementptr inbounds [5 x i32], [5 x i32]* %27, i64 0
  %29 = getelementptr inbounds [5 x i32], [5 x i32]* %28, i64 0, i64 4
  %30 = load i32, i32* %29, align 4
  %31 = mul nsw i32 %30, -123
  %32 = add nsw i32 %26, %31
  %33 = load [5 x i32]*, [5 x i32]** %3, align 8
  %34 = getelementptr inbounds [5 x i32], [5 x i32]* %33, i64 1
  %35 = getelementptr inbounds [5 x i32], [5 x i32]* %34, i64 0, i64 0
  %36 = load i32, i32* %35, align 4
  %37 = mul nsw i32 %36, 64
  %38 = add nsw i32 %32, %37
  %39 = load [5 x i32]*, [5 x i32]** %3, align 8
  %40 = getelementptr inbounds [5 x i32], [5 x i32]* %39, i64 1
  %41 = getelementptr inbounds [5 x i32], [5 x i32]* %40, i64 0, i64 1
  %42 = load i32, i32* %41, align 4
  %43 = mul nsw i32 %42, -120
  %44 = add nsw i32 %38, %43
  %45 = load [5 x i32]*, [5 x i32]** %3, align 8
  %46 = getelementptr inbounds [5 x i32], [5 x i32]* %45, i64 1
  %47 = getelementptr inbounds [5 x i32], [5 x i32]* %46, i64 0, i64 2
  %48 = load i32, i32* %47, align 4
  %49 = mul nsw i32 %48, 50
  %50 = add nsw i32 %44, %49
  %51 = load [5 x i32]*, [5 x i32]** %3, align 8
  %52 = getelementptr inbounds [5 x i32], [5 x i32]* %51, i64 1
  %53 = getelementptr inbounds [5 x i32], [5 x i32]* %52, i64 0, i64 3
  %54 = load i32, i32* %53, align 4
  %55 = mul nsw i32 %54, -59
  %56 = add nsw i32 %50, %55
  %57 = load [5 x i32]*, [5 x i32]** %3, align 8
  %58 = getelementptr inbounds [5 x i32], [5 x i32]* %57, i64 1
  %59 = getelementptr inbounds [5 x i32], [5 x i32]* %58, i64 0, i64 4
  %60 = load i32, i32* %59, align 4
  %61 = mul nsw i32 %60, 47
  %62 = add nsw i32 %56, %61
  %63 = load [5 x i32]*, [5 x i32]** %3, align 8
  %64 = getelementptr inbounds [5 x i32], [5 x i32]* %63, i64 2
  %65 = getelementptr inbounds [5 x i32], [5 x i32]* %64, i64 0, i64 0
  %66 = load i32, i32* %65, align 4
  %67 = mul nsw i32 %66, -111
  %68 = add nsw i32 %62, %67
  %69 = load [5 x i32]*, [5 x i32]** %3, align 8
  %70 = getelementptr inbounds [5 x i32], [5 x i32]* %69, i64 2
  %71 = getelementptr inbounds [5 x i32], [5 x i32]* %70, i64 0, i64 1
  %72 = load i32, i32* %71, align 4
  %73 = mul nsw i32 %72, -67
  %74 = add nsw i32 %68, %73
  %75 = load [5 x i32]*, [5 x i32]** %3, align 8
  %76 = getelementptr inbounds [5 x i32], [5 x i32]* %75, i64 2
  %77 = getelementptr inbounds [5 x i32], [5 x i32]* %76, i64 0, i64 2
  %78 = load i32, i32* %77, align 4
  %79 = mul nsw i32 %78, -106
  %80 = add nsw i32 %74, %79
  %81 = load [5 x i32]*, [5 x i32]** %3, align 8
  %82 = getelementptr inbounds [5 x i32], [5 x i32]* %81, i64 2
  %83 = getelementptr inbounds [5 x i32], [5 x i32]* %82, i64 0, i64 3
  %84 = load i32, i32* %83, align 4
  %85 = mul nsw i32 %84, -75
  %86 = add nsw i32 %80, %85
  %87 = load [5 x i32]*, [5 x i32]** %3, align 8
  %88 = getelementptr inbounds [5 x i32], [5 x i32]* %87, i64 2
  %89 = getelementptr inbounds [5 x i32], [5 x i32]* %88, i64 0, i64 4
  %90 = load i32, i32* %89, align 4
  %91 = mul nsw i32 %90, -102
  %92 = add nsw i32 %86, %91
  %93 = load [5 x i32]*, [5 x i32]** %3, align 8
  %94 = getelementptr inbounds [5 x i32], [5 x i32]* %93, i64 3
  %95 = getelementptr inbounds [5 x i32], [5 x i32]* %94, i64 0, i64 0
  %96 = load i32, i32* %95, align 4
  %97 = mul nsw i32 %96, 34
  %98 = add nsw i32 %92, %97
  %99 = load [5 x i32]*, [5 x i32]** %3, align 8
  %100 = getelementptr inbounds [5 x i32], [5 x i32]* %99, i64 3
  %101 = getelementptr inbounds [5 x i32], [5 x i32]* %100, i64 0, i64 1
  %102 = load i32, i32* %101, align 4
  %103 = mul nsw i32 %102, -39
  %104 = add nsw i32 %98, %103
  %105 = load [5 x i32]*, [5 x i32]** %3, align 8
  %106 = getelementptr inbounds [5 x i32], [5 x i32]* %105, i64 3
  %107 = getelementptr inbounds [5 x i32], [5 x i32]* %106, i64 0, i64 2
  %108 = load i32, i32* %107, align 4
  %109 = mul nsw i32 %108, 65
  %110 = add nsw i32 %104, %109
  %111 = load [5 x i32]*, [5 x i32]** %3, align 8
  %112 = getelementptr inbounds [5 x i32], [5 x i32]* %111, i64 3
  %113 = getelementptr inbounds [5 x i32], [5 x i32]* %112, i64 0, i64 3
  %114 = load i32, i32* %113, align 4
  %115 = mul nsw i32 %114, 47
  %116 = add nsw i32 %110, %115
  %117 = load [5 x i32]*, [5 x i32]** %3, align 8
  %118 = getelementptr inbounds [5 x i32], [5 x i32]* %117, i64 3
  %119 = getelementptr inbounds [5 x i32], [5 x i32]* %118, i64 0, i64 4
  %120 = load i32, i32* %119, align 4
  %121 = mul nsw i32 %120, 113
  %122 = add nsw i32 %116, %121
  %123 = load [5 x i32]*, [5 x i32]** %3, align 8
  %124 = getelementptr inbounds [5 x i32], [5 x i32]* %123, i64 4
  %125 = getelementptr inbounds [5 x i32], [5 x i32]* %124, i64 0, i64 0
  %126 = load i32, i32* %125, align 4
  %127 = mul nsw i32 %126, 110
  %128 = add nsw i32 %122, %127
  %129 = load [5 x i32]*, [5 x i32]** %3, align 8
  %130 = getelementptr inbounds [5 x i32], [5 x i32]* %129, i64 4
  %131 = getelementptr inbounds [5 x i32], [5 x i32]* %130, i64 0, i64 1
  %132 = load i32, i32* %131, align 4
  %133 = mul nsw i32 %132, 47
  %134 = add nsw i32 %128, %133
  %135 = load [5 x i32]*, [5 x i32]** %3, align 8
  %136 = getelementptr inbounds [5 x i32], [5 x i32]* %135, i64 4
  %137 = getelementptr inbounds [5 x i32], [5 x i32]* %136, i64 0, i64 2
  %138 = load i32, i32* %137, align 4
  %139 = mul nsw i32 %138, -4
  %140 = add nsw i32 %134, %139
  %141 = load [5 x i32]*, [5 x i32]** %3, align 8
  %142 = getelementptr inbounds [5 x i32], [5 x i32]* %141, i64 4
  %143 = getelementptr inbounds [5 x i32], [5 x i32]* %142, i64 0, i64 3
  %144 = load i32, i32* %143, align 4
  %145 = mul nsw i32 %144, 80
  %146 = add nsw i32 %140, %145
  %147 = load [5 x i32]*, [5 x i32]** %3, align 8
  %148 = getelementptr inbounds [5 x i32], [5 x i32]* %147, i64 4
  %149 = getelementptr inbounds [5 x i32], [5 x i32]* %148, i64 0, i64 4
  %150 = load i32, i32* %149, align 4
  %151 = mul nsw i32 %150, 46
  %152 = add nsw i32 %146, %151
  %153 = call i32 @relu_reg(i32 %152)
  %154 = mul nsw i32 %153, 39
  %155 = load [5 x i32]*, [5 x i32]** %3, align 8
  %156 = getelementptr inbounds [5 x i32], [5 x i32]* %155, i64 0
  %157 = getelementptr inbounds [5 x i32], [5 x i32]* %156, i64 0, i64 0
  %158 = load i32, i32* %157, align 4
  %159 = mul nsw i32 %158, -106
  %160 = load [5 x i32]*, [5 x i32]** %3, align 8
  %161 = getelementptr inbounds [5 x i32], [5 x i32]* %160, i64 0
  %162 = getelementptr inbounds [5 x i32], [5 x i32]* %161, i64 0, i64 1
  %163 = load i32, i32* %162, align 4
  %164 = mul nsw i32 %163, 126
  %165 = add nsw i32 %159, %164
  %166 = load [5 x i32]*, [5 x i32]** %3, align 8
  %167 = getelementptr inbounds [5 x i32], [5 x i32]* %166, i64 0
  %168 = getelementptr inbounds [5 x i32], [5 x i32]* %167, i64 0, i64 2
  %169 = load i32, i32* %168, align 4
  %170 = mul nsw i32 %169, -18
  %171 = add nsw i32 %165, %170
  %172 = load [5 x i32]*, [5 x i32]** %3, align 8
  %173 = getelementptr inbounds [5 x i32], [5 x i32]* %172, i64 0
  %174 = getelementptr inbounds [5 x i32], [5 x i32]* %173, i64 0, i64 3
  %175 = load i32, i32* %174, align 4
  %176 = mul nsw i32 %175, -31
  %177 = add nsw i32 %171, %176
  %178 = load [5 x i32]*, [5 x i32]** %3, align 8
  %179 = getelementptr inbounds [5 x i32], [5 x i32]* %178, i64 0
  %180 = getelementptr inbounds [5 x i32], [5 x i32]* %179, i64 0, i64 4
  %181 = load i32, i32* %180, align 4
  %182 = mul nsw i32 %181, -8
  %183 = add nsw i32 %177, %182
  %184 = load [5 x i32]*, [5 x i32]** %3, align 8
  %185 = getelementptr inbounds [5 x i32], [5 x i32]* %184, i64 1
  %186 = getelementptr inbounds [5 x i32], [5 x i32]* %185, i64 0, i64 0
  %187 = load i32, i32* %186, align 4
  %188 = mul nsw i32 %187, 47
  %189 = add nsw i32 %183, %188
  %190 = load [5 x i32]*, [5 x i32]** %3, align 8
  %191 = getelementptr inbounds [5 x i32], [5 x i32]* %190, i64 1
  %192 = getelementptr inbounds [5 x i32], [5 x i32]* %191, i64 0, i64 1
  %193 = load i32, i32* %192, align 4
  %194 = mul nsw i32 %193, -4
  %195 = add nsw i32 %189, %194
  %196 = load [5 x i32]*, [5 x i32]** %3, align 8
  %197 = getelementptr inbounds [5 x i32], [5 x i32]* %196, i64 1
  %198 = getelementptr inbounds [5 x i32], [5 x i32]* %197, i64 0, i64 2
  %199 = load i32, i32* %198, align 4
  %200 = mul nsw i32 %199, 67
  %201 = add nsw i32 %195, %200
  %202 = load [5 x i32]*, [5 x i32]** %3, align 8
  %203 = getelementptr inbounds [5 x i32], [5 x i32]* %202, i64 1
  %204 = getelementptr inbounds [5 x i32], [5 x i32]* %203, i64 0, i64 3
  %205 = load i32, i32* %204, align 4
  %206 = mul nsw i32 %205, -94
  %207 = add nsw i32 %201, %206
  %208 = load [5 x i32]*, [5 x i32]** %3, align 8
  %209 = getelementptr inbounds [5 x i32], [5 x i32]* %208, i64 1
  %210 = getelementptr inbounds [5 x i32], [5 x i32]* %209, i64 0, i64 4
  %211 = load i32, i32* %210, align 4
  %212 = mul nsw i32 %211, -121
  %213 = add nsw i32 %207, %212
  %214 = load [5 x i32]*, [5 x i32]** %3, align 8
  %215 = getelementptr inbounds [5 x i32], [5 x i32]* %214, i64 2
  %216 = getelementptr inbounds [5 x i32], [5 x i32]* %215, i64 0, i64 0
  %217 = load i32, i32* %216, align 4
  %218 = mul nsw i32 %217, 7
  %219 = add nsw i32 %213, %218
  %220 = load [5 x i32]*, [5 x i32]** %3, align 8
  %221 = getelementptr inbounds [5 x i32], [5 x i32]* %220, i64 2
  %222 = getelementptr inbounds [5 x i32], [5 x i32]* %221, i64 0, i64 1
  %223 = load i32, i32* %222, align 4
  %224 = mul nsw i32 %223, -21
  %225 = add nsw i32 %219, %224
  %226 = load [5 x i32]*, [5 x i32]** %3, align 8
  %227 = getelementptr inbounds [5 x i32], [5 x i32]* %226, i64 2
  %228 = getelementptr inbounds [5 x i32], [5 x i32]* %227, i64 0, i64 2
  %229 = load i32, i32* %228, align 4
  %230 = mul nsw i32 %229, -60
  %231 = add nsw i32 %225, %230
  %232 = load [5 x i32]*, [5 x i32]** %3, align 8
  %233 = getelementptr inbounds [5 x i32], [5 x i32]* %232, i64 2
  %234 = getelementptr inbounds [5 x i32], [5 x i32]* %233, i64 0, i64 3
  %235 = load i32, i32* %234, align 4
  %236 = mul nsw i32 %235, -43
  %237 = add nsw i32 %231, %236
  %238 = load [5 x i32]*, [5 x i32]** %3, align 8
  %239 = getelementptr inbounds [5 x i32], [5 x i32]* %238, i64 2
  %240 = getelementptr inbounds [5 x i32], [5 x i32]* %239, i64 0, i64 4
  %241 = load i32, i32* %240, align 4
  %242 = mul nsw i32 %241, 105
  %243 = add nsw i32 %237, %242
  %244 = load [5 x i32]*, [5 x i32]** %3, align 8
  %245 = getelementptr inbounds [5 x i32], [5 x i32]* %244, i64 3
  %246 = getelementptr inbounds [5 x i32], [5 x i32]* %245, i64 0, i64 0
  %247 = load i32, i32* %246, align 4
  %248 = mul nsw i32 %247, -42
  %249 = add nsw i32 %243, %248
  %250 = load [5 x i32]*, [5 x i32]** %3, align 8
  %251 = getelementptr inbounds [5 x i32], [5 x i32]* %250, i64 3
  %252 = getelementptr inbounds [5 x i32], [5 x i32]* %251, i64 0, i64 1
  %253 = load i32, i32* %252, align 4
  %254 = mul nsw i32 %253, 87
  %255 = add nsw i32 %249, %254
  %256 = load [5 x i32]*, [5 x i32]** %3, align 8
  %257 = getelementptr inbounds [5 x i32], [5 x i32]* %256, i64 3
  %258 = getelementptr inbounds [5 x i32], [5 x i32]* %257, i64 0, i64 2
  %259 = load i32, i32* %258, align 4
  %260 = mul nsw i32 %259, 29
  %261 = add nsw i32 %255, %260
  %262 = load [5 x i32]*, [5 x i32]** %3, align 8
  %263 = getelementptr inbounds [5 x i32], [5 x i32]* %262, i64 3
  %264 = getelementptr inbounds [5 x i32], [5 x i32]* %263, i64 0, i64 3
  %265 = load i32, i32* %264, align 4
  %266 = mul nsw i32 %265, -106
  %267 = add nsw i32 %261, %266
  %268 = load [5 x i32]*, [5 x i32]** %3, align 8
  %269 = getelementptr inbounds [5 x i32], [5 x i32]* %268, i64 3
  %270 = getelementptr inbounds [5 x i32], [5 x i32]* %269, i64 0, i64 4
  %271 = load i32, i32* %270, align 4
  %272 = mul nsw i32 %271, -31
  %273 = add nsw i32 %267, %272
  %274 = load [5 x i32]*, [5 x i32]** %3, align 8
  %275 = getelementptr inbounds [5 x i32], [5 x i32]* %274, i64 4
  %276 = getelementptr inbounds [5 x i32], [5 x i32]* %275, i64 0, i64 0
  %277 = load i32, i32* %276, align 4
  %278 = mul nsw i32 %277, -110
  %279 = add nsw i32 %273, %278
  %280 = load [5 x i32]*, [5 x i32]** %3, align 8
  %281 = getelementptr inbounds [5 x i32], [5 x i32]* %280, i64 4
  %282 = getelementptr inbounds [5 x i32], [5 x i32]* %281, i64 0, i64 1
  %283 = load i32, i32* %282, align 4
  %284 = mul nsw i32 %283, -100
  %285 = add nsw i32 %279, %284
  %286 = load [5 x i32]*, [5 x i32]** %3, align 8
  %287 = getelementptr inbounds [5 x i32], [5 x i32]* %286, i64 4
  %288 = getelementptr inbounds [5 x i32], [5 x i32]* %287, i64 0, i64 2
  %289 = load i32, i32* %288, align 4
  %290 = mul nsw i32 %289, -22
  %291 = add nsw i32 %285, %290
  %292 = load [5 x i32]*, [5 x i32]** %3, align 8
  %293 = getelementptr inbounds [5 x i32], [5 x i32]* %292, i64 4
  %294 = getelementptr inbounds [5 x i32], [5 x i32]* %293, i64 0, i64 3
  %295 = load i32, i32* %294, align 4
  %296 = mul nsw i32 %295, -75
  %297 = add nsw i32 %291, %296
  %298 = load [5 x i32]*, [5 x i32]** %3, align 8
  %299 = getelementptr inbounds [5 x i32], [5 x i32]* %298, i64 4
  %300 = getelementptr inbounds [5 x i32], [5 x i32]* %299, i64 0, i64 4
  %301 = load i32, i32* %300, align 4
  %302 = mul nsw i32 %301, -125
  %303 = add nsw i32 %297, %302
  %304 = call i32 @relu_reg(i32 %303)
  %305 = mul nsw i32 %304, 77
  %306 = add nsw i32 %154, %305
  %307 = load [5 x i32]*, [5 x i32]** %3, align 8
  %308 = getelementptr inbounds [5 x i32], [5 x i32]* %307, i64 0
  %309 = getelementptr inbounds [5 x i32], [5 x i32]* %308, i64 0, i64 0
  %310 = load i32, i32* %309, align 4
  %311 = mul nsw i32 %310, 26
  %312 = load [5 x i32]*, [5 x i32]** %3, align 8
  %313 = getelementptr inbounds [5 x i32], [5 x i32]* %312, i64 0
  %314 = getelementptr inbounds [5 x i32], [5 x i32]* %313, i64 0, i64 1
  %315 = load i32, i32* %314, align 4
  %316 = mul nsw i32 %315, 76
  %317 = add nsw i32 %311, %316
  %318 = load [5 x i32]*, [5 x i32]** %3, align 8
  %319 = getelementptr inbounds [5 x i32], [5 x i32]* %318, i64 0
  %320 = getelementptr inbounds [5 x i32], [5 x i32]* %319, i64 0, i64 2
  %321 = load i32, i32* %320, align 4
  %322 = mul nsw i32 %321, -70
  %323 = add nsw i32 %317, %322
  %324 = load [5 x i32]*, [5 x i32]** %3, align 8
  %325 = getelementptr inbounds [5 x i32], [5 x i32]* %324, i64 0
  %326 = getelementptr inbounds [5 x i32], [5 x i32]* %325, i64 0, i64 3
  %327 = load i32, i32* %326, align 4
  %328 = mul nsw i32 %327, 29
  %329 = add nsw i32 %323, %328
  %330 = load [5 x i32]*, [5 x i32]** %3, align 8
  %331 = getelementptr inbounds [5 x i32], [5 x i32]* %330, i64 0
  %332 = getelementptr inbounds [5 x i32], [5 x i32]* %331, i64 0, i64 4
  %333 = load i32, i32* %332, align 4
  %334 = mul nsw i32 %333, -95
  %335 = add nsw i32 %329, %334
  %336 = load [5 x i32]*, [5 x i32]** %3, align 8
  %337 = getelementptr inbounds [5 x i32], [5 x i32]* %336, i64 1
  %338 = getelementptr inbounds [5 x i32], [5 x i32]* %337, i64 0, i64 0
  %339 = load i32, i32* %338, align 4
  %340 = mul nsw i32 %339, 96
  %341 = add nsw i32 %335, %340
  %342 = load [5 x i32]*, [5 x i32]** %3, align 8
  %343 = getelementptr inbounds [5 x i32], [5 x i32]* %342, i64 1
  %344 = getelementptr inbounds [5 x i32], [5 x i32]* %343, i64 0, i64 1
  %345 = load i32, i32* %344, align 4
  %346 = mul nsw i32 %345, 52
  %347 = add nsw i32 %341, %346
  %348 = load [5 x i32]*, [5 x i32]** %3, align 8
  %349 = getelementptr inbounds [5 x i32], [5 x i32]* %348, i64 1
  %350 = getelementptr inbounds [5 x i32], [5 x i32]* %349, i64 0, i64 2
  %351 = load i32, i32* %350, align 4
  %352 = mul nsw i32 %351, -68
  %353 = add nsw i32 %347, %352
  %354 = load [5 x i32]*, [5 x i32]** %3, align 8
  %355 = getelementptr inbounds [5 x i32], [5 x i32]* %354, i64 1
  %356 = getelementptr inbounds [5 x i32], [5 x i32]* %355, i64 0, i64 3
  %357 = load i32, i32* %356, align 4
  %358 = mul nsw i32 %357, -5
  %359 = add nsw i32 %353, %358
  %360 = load [5 x i32]*, [5 x i32]** %3, align 8
  %361 = getelementptr inbounds [5 x i32], [5 x i32]* %360, i64 1
  %362 = getelementptr inbounds [5 x i32], [5 x i32]* %361, i64 0, i64 4
  %363 = load i32, i32* %362, align 4
  %364 = mul nsw i32 %363, 34
  %365 = add nsw i32 %359, %364
  %366 = load [5 x i32]*, [5 x i32]** %3, align 8
  %367 = getelementptr inbounds [5 x i32], [5 x i32]* %366, i64 2
  %368 = getelementptr inbounds [5 x i32], [5 x i32]* %367, i64 0, i64 0
  %369 = load i32, i32* %368, align 4
  %370 = mul nsw i32 %369, -34
  %371 = add nsw i32 %365, %370
  %372 = load [5 x i32]*, [5 x i32]** %3, align 8
  %373 = getelementptr inbounds [5 x i32], [5 x i32]* %372, i64 2
  %374 = getelementptr inbounds [5 x i32], [5 x i32]* %373, i64 0, i64 1
  %375 = load i32, i32* %374, align 4
  %376 = mul nsw i32 %375, 102
  %377 = add nsw i32 %371, %376
  %378 = load [5 x i32]*, [5 x i32]** %3, align 8
  %379 = getelementptr inbounds [5 x i32], [5 x i32]* %378, i64 2
  %380 = getelementptr inbounds [5 x i32], [5 x i32]* %379, i64 0, i64 2
  %381 = load i32, i32* %380, align 4
  %382 = mul nsw i32 %381, 6
  %383 = add nsw i32 %377, %382
  %384 = load [5 x i32]*, [5 x i32]** %3, align 8
  %385 = getelementptr inbounds [5 x i32], [5 x i32]* %384, i64 2
  %386 = getelementptr inbounds [5 x i32], [5 x i32]* %385, i64 0, i64 3
  %387 = load i32, i32* %386, align 4
  %388 = mul nsw i32 %387, -38
  %389 = add nsw i32 %383, %388
  %390 = load [5 x i32]*, [5 x i32]** %3, align 8
  %391 = getelementptr inbounds [5 x i32], [5 x i32]* %390, i64 2
  %392 = getelementptr inbounds [5 x i32], [5 x i32]* %391, i64 0, i64 4
  %393 = load i32, i32* %392, align 4
  %394 = mul nsw i32 %393, 27
  %395 = add nsw i32 %389, %394
  %396 = load [5 x i32]*, [5 x i32]** %3, align 8
  %397 = getelementptr inbounds [5 x i32], [5 x i32]* %396, i64 3
  %398 = getelementptr inbounds [5 x i32], [5 x i32]* %397, i64 0, i64 0
  %399 = load i32, i32* %398, align 4
  %400 = mul nsw i32 %399, 110
  %401 = add nsw i32 %395, %400
  %402 = load [5 x i32]*, [5 x i32]** %3, align 8
  %403 = getelementptr inbounds [5 x i32], [5 x i32]* %402, i64 3
  %404 = getelementptr inbounds [5 x i32], [5 x i32]* %403, i64 0, i64 1
  %405 = load i32, i32* %404, align 4
  %406 = mul nsw i32 %405, 116
  %407 = add nsw i32 %401, %406
  %408 = load [5 x i32]*, [5 x i32]** %3, align 8
  %409 = getelementptr inbounds [5 x i32], [5 x i32]* %408, i64 3
  %410 = getelementptr inbounds [5 x i32], [5 x i32]* %409, i64 0, i64 2
  %411 = load i32, i32* %410, align 4
  %412 = mul nsw i32 %411, 39
  %413 = add nsw i32 %407, %412
  %414 = load [5 x i32]*, [5 x i32]** %3, align 8
  %415 = getelementptr inbounds [5 x i32], [5 x i32]* %414, i64 3
  %416 = getelementptr inbounds [5 x i32], [5 x i32]* %415, i64 0, i64 3
  %417 = load i32, i32* %416, align 4
  %418 = mul nsw i32 %417, -63
  %419 = add nsw i32 %413, %418
  %420 = load [5 x i32]*, [5 x i32]** %3, align 8
  %421 = getelementptr inbounds [5 x i32], [5 x i32]* %420, i64 3
  %422 = getelementptr inbounds [5 x i32], [5 x i32]* %421, i64 0, i64 4
  %423 = load i32, i32* %422, align 4
  %424 = mul nsw i32 %423, -99
  %425 = add nsw i32 %419, %424
  %426 = load [5 x i32]*, [5 x i32]** %3, align 8
  %427 = getelementptr inbounds [5 x i32], [5 x i32]* %426, i64 4
  %428 = getelementptr inbounds [5 x i32], [5 x i32]* %427, i64 0, i64 0
  %429 = load i32, i32* %428, align 4
  %430 = mul nsw i32 %429, 65
  %431 = add nsw i32 %425, %430
  %432 = load [5 x i32]*, [5 x i32]** %3, align 8
  %433 = getelementptr inbounds [5 x i32], [5 x i32]* %432, i64 4
  %434 = getelementptr inbounds [5 x i32], [5 x i32]* %433, i64 0, i64 1
  %435 = load i32, i32* %434, align 4
  %436 = mul nsw i32 %435, 120
  %437 = add nsw i32 %431, %436
  %438 = load [5 x i32]*, [5 x i32]** %3, align 8
  %439 = getelementptr inbounds [5 x i32], [5 x i32]* %438, i64 4
  %440 = getelementptr inbounds [5 x i32], [5 x i32]* %439, i64 0, i64 2
  %441 = load i32, i32* %440, align 4
  %442 = mul nsw i32 %441, -39
  %443 = add nsw i32 %437, %442
  %444 = load [5 x i32]*, [5 x i32]** %3, align 8
  %445 = getelementptr inbounds [5 x i32], [5 x i32]* %444, i64 4
  %446 = getelementptr inbounds [5 x i32], [5 x i32]* %445, i64 0, i64 3
  %447 = load i32, i32* %446, align 4
  %448 = mul nsw i32 %447, -6
  %449 = add nsw i32 %443, %448
  %450 = load [5 x i32]*, [5 x i32]** %3, align 8
  %451 = getelementptr inbounds [5 x i32], [5 x i32]* %450, i64 4
  %452 = getelementptr inbounds [5 x i32], [5 x i32]* %451, i64 0, i64 4
  %453 = load i32, i32* %452, align 4
  %454 = mul nsw i32 %453, 94
  %455 = add nsw i32 %449, %454
  %456 = call i32 @relu_reg(i32 %455)
  %457 = mul nsw i32 %456, 127
  %458 = add nsw i32 %306, %457
  %459 = load [5 x i32]*, [5 x i32]** %3, align 8
  %460 = getelementptr inbounds [5 x i32], [5 x i32]* %459, i64 0
  %461 = getelementptr inbounds [5 x i32], [5 x i32]* %460, i64 0, i64 0
  %462 = load i32, i32* %461, align 4
  %463 = mul nsw i32 %462, -23
  %464 = load [5 x i32]*, [5 x i32]** %3, align 8
  %465 = getelementptr inbounds [5 x i32], [5 x i32]* %464, i64 0
  %466 = getelementptr inbounds [5 x i32], [5 x i32]* %465, i64 0, i64 1
  %467 = load i32, i32* %466, align 4
  %468 = mul nsw i32 %467, -63
  %469 = add nsw i32 %463, %468
  %470 = load [5 x i32]*, [5 x i32]** %3, align 8
  %471 = getelementptr inbounds [5 x i32], [5 x i32]* %470, i64 0
  %472 = getelementptr inbounds [5 x i32], [5 x i32]* %471, i64 0, i64 2
  %473 = load i32, i32* %472, align 4
  %474 = mul nsw i32 %473, 49
  %475 = add nsw i32 %469, %474
  %476 = load [5 x i32]*, [5 x i32]** %3, align 8
  %477 = getelementptr inbounds [5 x i32], [5 x i32]* %476, i64 0
  %478 = getelementptr inbounds [5 x i32], [5 x i32]* %477, i64 0, i64 3
  %479 = load i32, i32* %478, align 4
  %480 = mul nsw i32 %479, 50
  %481 = add nsw i32 %475, %480
  %482 = load [5 x i32]*, [5 x i32]** %3, align 8
  %483 = getelementptr inbounds [5 x i32], [5 x i32]* %482, i64 0
  %484 = getelementptr inbounds [5 x i32], [5 x i32]* %483, i64 0, i64 4
  %485 = load i32, i32* %484, align 4
  %486 = mul nsw i32 %485, 72
  %487 = add nsw i32 %481, %486
  %488 = load [5 x i32]*, [5 x i32]** %3, align 8
  %489 = getelementptr inbounds [5 x i32], [5 x i32]* %488, i64 1
  %490 = getelementptr inbounds [5 x i32], [5 x i32]* %489, i64 0, i64 0
  %491 = load i32, i32* %490, align 4
  %492 = mul nsw i32 %491, 85
  %493 = add nsw i32 %487, %492
  %494 = load [5 x i32]*, [5 x i32]** %3, align 8
  %495 = getelementptr inbounds [5 x i32], [5 x i32]* %494, i64 1
  %496 = getelementptr inbounds [5 x i32], [5 x i32]* %495, i64 0, i64 1
  %497 = load i32, i32* %496, align 4
  %498 = mul nsw i32 %497, -30
  %499 = add nsw i32 %493, %498
  %500 = load [5 x i32]*, [5 x i32]** %3, align 8
  %501 = getelementptr inbounds [5 x i32], [5 x i32]* %500, i64 1
  %502 = getelementptr inbounds [5 x i32], [5 x i32]* %501, i64 0, i64 2
  %503 = load i32, i32* %502, align 4
  %504 = mul nsw i32 %503, 12
  %505 = add nsw i32 %499, %504
  %506 = load [5 x i32]*, [5 x i32]** %3, align 8
  %507 = getelementptr inbounds [5 x i32], [5 x i32]* %506, i64 1
  %508 = getelementptr inbounds [5 x i32], [5 x i32]* %507, i64 0, i64 3
  %509 = load i32, i32* %508, align 4
  %510 = mul nsw i32 %509, 125
  %511 = add nsw i32 %505, %510
  %512 = load [5 x i32]*, [5 x i32]** %3, align 8
  %513 = getelementptr inbounds [5 x i32], [5 x i32]* %512, i64 1
  %514 = getelementptr inbounds [5 x i32], [5 x i32]* %513, i64 0, i64 4
  %515 = load i32, i32* %514, align 4
  %516 = mul nsw i32 %515, -117
  %517 = add nsw i32 %511, %516
  %518 = load [5 x i32]*, [5 x i32]** %3, align 8
  %519 = getelementptr inbounds [5 x i32], [5 x i32]* %518, i64 2
  %520 = getelementptr inbounds [5 x i32], [5 x i32]* %519, i64 0, i64 0
  %521 = load i32, i32* %520, align 4
  %522 = mul nsw i32 %521, -65
  %523 = add nsw i32 %517, %522
  %524 = load [5 x i32]*, [5 x i32]** %3, align 8
  %525 = getelementptr inbounds [5 x i32], [5 x i32]* %524, i64 2
  %526 = getelementptr inbounds [5 x i32], [5 x i32]* %525, i64 0, i64 1
  %527 = load i32, i32* %526, align 4
  %528 = mul nsw i32 %527, -67
  %529 = add nsw i32 %523, %528
  %530 = load [5 x i32]*, [5 x i32]** %3, align 8
  %531 = getelementptr inbounds [5 x i32], [5 x i32]* %530, i64 2
  %532 = getelementptr inbounds [5 x i32], [5 x i32]* %531, i64 0, i64 2
  %533 = load i32, i32* %532, align 4
  %534 = mul nsw i32 %533, 125
  %535 = add nsw i32 %529, %534
  %536 = load [5 x i32]*, [5 x i32]** %3, align 8
  %537 = getelementptr inbounds [5 x i32], [5 x i32]* %536, i64 2
  %538 = getelementptr inbounds [5 x i32], [5 x i32]* %537, i64 0, i64 3
  %539 = load i32, i32* %538, align 4
  %540 = mul nsw i32 %539, 110
  %541 = add nsw i32 %535, %540
  %542 = load [5 x i32]*, [5 x i32]** %3, align 8
  %543 = getelementptr inbounds [5 x i32], [5 x i32]* %542, i64 2
  %544 = getelementptr inbounds [5 x i32], [5 x i32]* %543, i64 0, i64 4
  %545 = load i32, i32* %544, align 4
  %546 = mul nsw i32 %545, -31
  %547 = add nsw i32 %541, %546
  %548 = load [5 x i32]*, [5 x i32]** %3, align 8
  %549 = getelementptr inbounds [5 x i32], [5 x i32]* %548, i64 3
  %550 = getelementptr inbounds [5 x i32], [5 x i32]* %549, i64 0, i64 0
  %551 = load i32, i32* %550, align 4
  %552 = mul nsw i32 %551, -123
  %553 = add nsw i32 %547, %552
  %554 = load [5 x i32]*, [5 x i32]** %3, align 8
  %555 = getelementptr inbounds [5 x i32], [5 x i32]* %554, i64 3
  %556 = getelementptr inbounds [5 x i32], [5 x i32]* %555, i64 0, i64 1
  %557 = load i32, i32* %556, align 4
  %558 = mul nsw i32 %557, 83
  %559 = add nsw i32 %553, %558
  %560 = load [5 x i32]*, [5 x i32]** %3, align 8
  %561 = getelementptr inbounds [5 x i32], [5 x i32]* %560, i64 3
  %562 = getelementptr inbounds [5 x i32], [5 x i32]* %561, i64 0, i64 2
  %563 = load i32, i32* %562, align 4
  %564 = mul nsw i32 %563, 122
  %565 = add nsw i32 %559, %564
  %566 = load [5 x i32]*, [5 x i32]** %3, align 8
  %567 = getelementptr inbounds [5 x i32], [5 x i32]* %566, i64 3
  %568 = getelementptr inbounds [5 x i32], [5 x i32]* %567, i64 0, i64 3
  %569 = load i32, i32* %568, align 4
  %570 = mul nsw i32 %569, 11
  %571 = add nsw i32 %565, %570
  %572 = load [5 x i32]*, [5 x i32]** %3, align 8
  %573 = getelementptr inbounds [5 x i32], [5 x i32]* %572, i64 3
  %574 = getelementptr inbounds [5 x i32], [5 x i32]* %573, i64 0, i64 4
  %575 = load i32, i32* %574, align 4
  %576 = mul nsw i32 %575, -23
  %577 = add nsw i32 %571, %576
  %578 = load [5 x i32]*, [5 x i32]** %3, align 8
  %579 = getelementptr inbounds [5 x i32], [5 x i32]* %578, i64 4
  %580 = getelementptr inbounds [5 x i32], [5 x i32]* %579, i64 0, i64 0
  %581 = load i32, i32* %580, align 4
  %582 = mul nsw i32 %581, -47
  %583 = add nsw i32 %577, %582
  %584 = load [5 x i32]*, [5 x i32]** %3, align 8
  %585 = getelementptr inbounds [5 x i32], [5 x i32]* %584, i64 4
  %586 = getelementptr inbounds [5 x i32], [5 x i32]* %585, i64 0, i64 1
  %587 = load i32, i32* %586, align 4
  %588 = mul nsw i32 %587, -32
  %589 = add nsw i32 %583, %588
  %590 = load [5 x i32]*, [5 x i32]** %3, align 8
  %591 = getelementptr inbounds [5 x i32], [5 x i32]* %590, i64 4
  %592 = getelementptr inbounds [5 x i32], [5 x i32]* %591, i64 0, i64 2
  %593 = load i32, i32* %592, align 4
  %594 = mul nsw i32 %593, -117
  %595 = add nsw i32 %589, %594
  %596 = load [5 x i32]*, [5 x i32]** %3, align 8
  %597 = getelementptr inbounds [5 x i32], [5 x i32]* %596, i64 4
  %598 = getelementptr inbounds [5 x i32], [5 x i32]* %597, i64 0, i64 3
  %599 = load i32, i32* %598, align 4
  %600 = mul nsw i32 %599, 95
  %601 = add nsw i32 %595, %600
  %602 = load [5 x i32]*, [5 x i32]** %3, align 8
  %603 = getelementptr inbounds [5 x i32], [5 x i32]* %602, i64 4
  %604 = getelementptr inbounds [5 x i32], [5 x i32]* %603, i64 0, i64 4
  %605 = load i32, i32* %604, align 4
  %606 = mul nsw i32 %605, 118
  %607 = add nsw i32 %601, %606
  %608 = call i32 @relu_reg(i32 %607)
  %609 = mul nsw i32 %608, -106
  %610 = add nsw i32 %458, %609
  %611 = load [5 x i32]*, [5 x i32]** %3, align 8
  %612 = getelementptr inbounds [5 x i32], [5 x i32]* %611, i64 0
  %613 = getelementptr inbounds [5 x i32], [5 x i32]* %612, i64 0, i64 0
  %614 = load i32, i32* %613, align 4
  %615 = mul nsw i32 %614, 8
  %616 = load [5 x i32]*, [5 x i32]** %3, align 8
  %617 = getelementptr inbounds [5 x i32], [5 x i32]* %616, i64 0
  %618 = getelementptr inbounds [5 x i32], [5 x i32]* %617, i64 0, i64 1
  %619 = load i32, i32* %618, align 4
  %620 = mul nsw i32 %619, 82
  %621 = add nsw i32 %615, %620
  %622 = load [5 x i32]*, [5 x i32]** %3, align 8
  %623 = getelementptr inbounds [5 x i32], [5 x i32]* %622, i64 0
  %624 = getelementptr inbounds [5 x i32], [5 x i32]* %623, i64 0, i64 2
  %625 = load i32, i32* %624, align 4
  %626 = mul nsw i32 %625, -104
  %627 = add nsw i32 %621, %626
  %628 = load [5 x i32]*, [5 x i32]** %3, align 8
  %629 = getelementptr inbounds [5 x i32], [5 x i32]* %628, i64 0
  %630 = getelementptr inbounds [5 x i32], [5 x i32]* %629, i64 0, i64 3
  %631 = load i32, i32* %630, align 4
  %632 = mul nsw i32 %631, 101
  %633 = add nsw i32 %627, %632
  %634 = load [5 x i32]*, [5 x i32]** %3, align 8
  %635 = getelementptr inbounds [5 x i32], [5 x i32]* %634, i64 0
  %636 = getelementptr inbounds [5 x i32], [5 x i32]* %635, i64 0, i64 4
  %637 = load i32, i32* %636, align 4
  %638 = mul nsw i32 %637, -116
  %639 = add nsw i32 %633, %638
  %640 = load [5 x i32]*, [5 x i32]** %3, align 8
  %641 = getelementptr inbounds [5 x i32], [5 x i32]* %640, i64 1
  %642 = getelementptr inbounds [5 x i32], [5 x i32]* %641, i64 0, i64 0
  %643 = load i32, i32* %642, align 4
  %644 = mul nsw i32 %643, -63
  %645 = add nsw i32 %639, %644
  %646 = load [5 x i32]*, [5 x i32]** %3, align 8
  %647 = getelementptr inbounds [5 x i32], [5 x i32]* %646, i64 1
  %648 = getelementptr inbounds [5 x i32], [5 x i32]* %647, i64 0, i64 1
  %649 = load i32, i32* %648, align 4
  %650 = mul nsw i32 %649, -16
  %651 = add nsw i32 %645, %650
  %652 = load [5 x i32]*, [5 x i32]** %3, align 8
  %653 = getelementptr inbounds [5 x i32], [5 x i32]* %652, i64 1
  %654 = getelementptr inbounds [5 x i32], [5 x i32]* %653, i64 0, i64 2
  %655 = load i32, i32* %654, align 4
  %656 = mul nsw i32 %655, -70
  %657 = add nsw i32 %651, %656
  %658 = load [5 x i32]*, [5 x i32]** %3, align 8
  %659 = getelementptr inbounds [5 x i32], [5 x i32]* %658, i64 1
  %660 = getelementptr inbounds [5 x i32], [5 x i32]* %659, i64 0, i64 3
  %661 = load i32, i32* %660, align 4
  %662 = mul nsw i32 %661, 125
  %663 = add nsw i32 %657, %662
  %664 = load [5 x i32]*, [5 x i32]** %3, align 8
  %665 = getelementptr inbounds [5 x i32], [5 x i32]* %664, i64 1
  %666 = getelementptr inbounds [5 x i32], [5 x i32]* %665, i64 0, i64 4
  %667 = load i32, i32* %666, align 4
  %668 = mul nsw i32 %667, 75
  %669 = add nsw i32 %663, %668
  %670 = load [5 x i32]*, [5 x i32]** %3, align 8
  %671 = getelementptr inbounds [5 x i32], [5 x i32]* %670, i64 2
  %672 = getelementptr inbounds [5 x i32], [5 x i32]* %671, i64 0, i64 0
  %673 = load i32, i32* %672, align 4
  %674 = mul nsw i32 %673, 66
  %675 = add nsw i32 %669, %674
  %676 = load [5 x i32]*, [5 x i32]** %3, align 8
  %677 = getelementptr inbounds [5 x i32], [5 x i32]* %676, i64 2
  %678 = getelementptr inbounds [5 x i32], [5 x i32]* %677, i64 0, i64 1
  %679 = load i32, i32* %678, align 4
  %680 = mul nsw i32 %679, -96
  %681 = add nsw i32 %675, %680
  %682 = load [5 x i32]*, [5 x i32]** %3, align 8
  %683 = getelementptr inbounds [5 x i32], [5 x i32]* %682, i64 2
  %684 = getelementptr inbounds [5 x i32], [5 x i32]* %683, i64 0, i64 2
  %685 = load i32, i32* %684, align 4
  %686 = mul nsw i32 %685, -101
  %687 = add nsw i32 %681, %686
  %688 = load [5 x i32]*, [5 x i32]** %3, align 8
  %689 = getelementptr inbounds [5 x i32], [5 x i32]* %688, i64 2
  %690 = getelementptr inbounds [5 x i32], [5 x i32]* %689, i64 0, i64 3
  %691 = load i32, i32* %690, align 4
  %692 = mul nsw i32 %691, -114
  %693 = add nsw i32 %687, %692
  %694 = load [5 x i32]*, [5 x i32]** %3, align 8
  %695 = getelementptr inbounds [5 x i32], [5 x i32]* %694, i64 2
  %696 = getelementptr inbounds [5 x i32], [5 x i32]* %695, i64 0, i64 4
  %697 = load i32, i32* %696, align 4
  %698 = mul nsw i32 %697, 59
  %699 = add nsw i32 %693, %698
  %700 = load [5 x i32]*, [5 x i32]** %3, align 8
  %701 = getelementptr inbounds [5 x i32], [5 x i32]* %700, i64 3
  %702 = getelementptr inbounds [5 x i32], [5 x i32]* %701, i64 0, i64 0
  %703 = load i32, i32* %702, align 4
  %704 = mul nsw i32 %703, 12
  %705 = add nsw i32 %699, %704
  %706 = load [5 x i32]*, [5 x i32]** %3, align 8
  %707 = getelementptr inbounds [5 x i32], [5 x i32]* %706, i64 3
  %708 = getelementptr inbounds [5 x i32], [5 x i32]* %707, i64 0, i64 1
  %709 = load i32, i32* %708, align 4
  %710 = mul nsw i32 %709, 5
  %711 = add nsw i32 %705, %710
  %712 = load [5 x i32]*, [5 x i32]** %3, align 8
  %713 = getelementptr inbounds [5 x i32], [5 x i32]* %712, i64 3
  %714 = getelementptr inbounds [5 x i32], [5 x i32]* %713, i64 0, i64 2
  %715 = load i32, i32* %714, align 4
  %716 = mul nsw i32 %715, -95
  %717 = add nsw i32 %711, %716
  %718 = load [5 x i32]*, [5 x i32]** %3, align 8
  %719 = getelementptr inbounds [5 x i32], [5 x i32]* %718, i64 3
  %720 = getelementptr inbounds [5 x i32], [5 x i32]* %719, i64 0, i64 3
  %721 = load i32, i32* %720, align 4
  %722 = mul nsw i32 %721, 116
  %723 = add nsw i32 %717, %722
  %724 = load [5 x i32]*, [5 x i32]** %3, align 8
  %725 = getelementptr inbounds [5 x i32], [5 x i32]* %724, i64 3
  %726 = getelementptr inbounds [5 x i32], [5 x i32]* %725, i64 0, i64 4
  %727 = load i32, i32* %726, align 4
  %728 = mul nsw i32 %727, -93
  %729 = add nsw i32 %723, %728
  %730 = load [5 x i32]*, [5 x i32]** %3, align 8
  %731 = getelementptr inbounds [5 x i32], [5 x i32]* %730, i64 4
  %732 = getelementptr inbounds [5 x i32], [5 x i32]* %731, i64 0, i64 0
  %733 = load i32, i32* %732, align 4
  %734 = mul nsw i32 %733, 15
  %735 = add nsw i32 %729, %734
  %736 = load [5 x i32]*, [5 x i32]** %3, align 8
  %737 = getelementptr inbounds [5 x i32], [5 x i32]* %736, i64 4
  %738 = getelementptr inbounds [5 x i32], [5 x i32]* %737, i64 0, i64 1
  %739 = load i32, i32* %738, align 4
  %740 = mul nsw i32 %739, 79
  %741 = add nsw i32 %735, %740
  %742 = load [5 x i32]*, [5 x i32]** %3, align 8
  %743 = getelementptr inbounds [5 x i32], [5 x i32]* %742, i64 4
  %744 = getelementptr inbounds [5 x i32], [5 x i32]* %743, i64 0, i64 2
  %745 = load i32, i32* %744, align 4
  %746 = mul nsw i32 %745, 3
  %747 = add nsw i32 %741, %746
  %748 = load [5 x i32]*, [5 x i32]** %3, align 8
  %749 = getelementptr inbounds [5 x i32], [5 x i32]* %748, i64 4
  %750 = getelementptr inbounds [5 x i32], [5 x i32]* %749, i64 0, i64 3
  %751 = load i32, i32* %750, align 4
  %752 = mul nsw i32 %751, 49
  %753 = add nsw i32 %747, %752
  %754 = load [5 x i32]*, [5 x i32]** %3, align 8
  %755 = getelementptr inbounds [5 x i32], [5 x i32]* %754, i64 4
  %756 = getelementptr inbounds [5 x i32], [5 x i32]* %755, i64 0, i64 4
  %757 = load i32, i32* %756, align 4
  %758 = mul nsw i32 %757, -124
  %759 = add nsw i32 %753, %758
  %760 = call i32 @relu_reg(i32 %759)
  %761 = mul nsw i32 %760, -3
  %762 = add nsw i32 %610, %761
  %763 = load [5 x i32]*, [5 x i32]** %3, align 8
  %764 = getelementptr inbounds [5 x i32], [5 x i32]* %763, i64 0
  %765 = getelementptr inbounds [5 x i32], [5 x i32]* %764, i64 0, i64 0
  %766 = load i32, i32* %765, align 4
  %767 = mul nsw i32 %766, 81
  %768 = load [5 x i32]*, [5 x i32]** %3, align 8
  %769 = getelementptr inbounds [5 x i32], [5 x i32]* %768, i64 0
  %770 = getelementptr inbounds [5 x i32], [5 x i32]* %769, i64 0, i64 1
  %771 = load i32, i32* %770, align 4
  %772 = mul nsw i32 %771, 68
  %773 = add nsw i32 %767, %772
  %774 = load [5 x i32]*, [5 x i32]** %3, align 8
  %775 = getelementptr inbounds [5 x i32], [5 x i32]* %774, i64 0
  %776 = getelementptr inbounds [5 x i32], [5 x i32]* %775, i64 0, i64 2
  %777 = load i32, i32* %776, align 4
  %778 = mul nsw i32 %777, -102
  %779 = add nsw i32 %773, %778
  %780 = load [5 x i32]*, [5 x i32]** %3, align 8
  %781 = getelementptr inbounds [5 x i32], [5 x i32]* %780, i64 0
  %782 = getelementptr inbounds [5 x i32], [5 x i32]* %781, i64 0, i64 3
  %783 = load i32, i32* %782, align 4
  %784 = mul nsw i32 %783, -74
  %785 = add nsw i32 %779, %784
  %786 = load [5 x i32]*, [5 x i32]** %3, align 8
  %787 = getelementptr inbounds [5 x i32], [5 x i32]* %786, i64 0
  %788 = getelementptr inbounds [5 x i32], [5 x i32]* %787, i64 0, i64 4
  %789 = load i32, i32* %788, align 4
  %790 = mul nsw i32 %789, 121
  %791 = add nsw i32 %785, %790
  %792 = load [5 x i32]*, [5 x i32]** %3, align 8
  %793 = getelementptr inbounds [5 x i32], [5 x i32]* %792, i64 1
  %794 = getelementptr inbounds [5 x i32], [5 x i32]* %793, i64 0, i64 0
  %795 = load i32, i32* %794, align 4
  %796 = mul nsw i32 %795, -15
  %797 = add nsw i32 %791, %796
  %798 = load [5 x i32]*, [5 x i32]** %3, align 8
  %799 = getelementptr inbounds [5 x i32], [5 x i32]* %798, i64 1
  %800 = getelementptr inbounds [5 x i32], [5 x i32]* %799, i64 0, i64 1
  %801 = load i32, i32* %800, align 4
  %802 = mul nsw i32 %801, 55
  %803 = add nsw i32 %797, %802
  %804 = load [5 x i32]*, [5 x i32]** %3, align 8
  %805 = getelementptr inbounds [5 x i32], [5 x i32]* %804, i64 1
  %806 = getelementptr inbounds [5 x i32], [5 x i32]* %805, i64 0, i64 2
  %807 = load i32, i32* %806, align 4
  %808 = mul nsw i32 %807, 101
  %809 = add nsw i32 %803, %808
  %810 = load [5 x i32]*, [5 x i32]** %3, align 8
  %811 = getelementptr inbounds [5 x i32], [5 x i32]* %810, i64 1
  %812 = getelementptr inbounds [5 x i32], [5 x i32]* %811, i64 0, i64 3
  %813 = load i32, i32* %812, align 4
  %814 = mul nsw i32 %813, -13
  %815 = add nsw i32 %809, %814
  %816 = load [5 x i32]*, [5 x i32]** %3, align 8
  %817 = getelementptr inbounds [5 x i32], [5 x i32]* %816, i64 1
  %818 = getelementptr inbounds [5 x i32], [5 x i32]* %817, i64 0, i64 4
  %819 = load i32, i32* %818, align 4
  %820 = mul nsw i32 %819, -62
  %821 = add nsw i32 %815, %820
  %822 = load [5 x i32]*, [5 x i32]** %3, align 8
  %823 = getelementptr inbounds [5 x i32], [5 x i32]* %822, i64 2
  %824 = getelementptr inbounds [5 x i32], [5 x i32]* %823, i64 0, i64 0
  %825 = load i32, i32* %824, align 4
  %826 = mul nsw i32 %825, 64
  %827 = add nsw i32 %821, %826
  %828 = load [5 x i32]*, [5 x i32]** %3, align 8
  %829 = getelementptr inbounds [5 x i32], [5 x i32]* %828, i64 2
  %830 = getelementptr inbounds [5 x i32], [5 x i32]* %829, i64 0, i64 1
  %831 = load i32, i32* %830, align 4
  %832 = mul nsw i32 %831, 114
  %833 = add nsw i32 %827, %832
  %834 = load [5 x i32]*, [5 x i32]** %3, align 8
  %835 = getelementptr inbounds [5 x i32], [5 x i32]* %834, i64 2
  %836 = getelementptr inbounds [5 x i32], [5 x i32]* %835, i64 0, i64 2
  %837 = load i32, i32* %836, align 4
  %838 = mul nsw i32 %837, 38
  %839 = add nsw i32 %833, %838
  %840 = load [5 x i32]*, [5 x i32]** %3, align 8
  %841 = getelementptr inbounds [5 x i32], [5 x i32]* %840, i64 2
  %842 = getelementptr inbounds [5 x i32], [5 x i32]* %841, i64 0, i64 3
  %843 = load i32, i32* %842, align 4
  %844 = mul nsw i32 %843, -21
  %845 = add nsw i32 %839, %844
  %846 = load [5 x i32]*, [5 x i32]** %3, align 8
  %847 = getelementptr inbounds [5 x i32], [5 x i32]* %846, i64 2
  %848 = getelementptr inbounds [5 x i32], [5 x i32]* %847, i64 0, i64 4
  %849 = load i32, i32* %848, align 4
  %850 = mul nsw i32 %849, 112
  %851 = add nsw i32 %845, %850
  %852 = load [5 x i32]*, [5 x i32]** %3, align 8
  %853 = getelementptr inbounds [5 x i32], [5 x i32]* %852, i64 3
  %854 = getelementptr inbounds [5 x i32], [5 x i32]* %853, i64 0, i64 0
  %855 = load i32, i32* %854, align 4
  %856 = mul nsw i32 %855, 114
  %857 = add nsw i32 %851, %856
  %858 = load [5 x i32]*, [5 x i32]** %3, align 8
  %859 = getelementptr inbounds [5 x i32], [5 x i32]* %858, i64 3
  %860 = getelementptr inbounds [5 x i32], [5 x i32]* %859, i64 0, i64 1
  %861 = load i32, i32* %860, align 4
  %862 = mul nsw i32 %861, 112
  %863 = add nsw i32 %857, %862
  %864 = load [5 x i32]*, [5 x i32]** %3, align 8
  %865 = getelementptr inbounds [5 x i32], [5 x i32]* %864, i64 3
  %866 = getelementptr inbounds [5 x i32], [5 x i32]* %865, i64 0, i64 2
  %867 = load i32, i32* %866, align 4
  %868 = mul nsw i32 %867, -10
  %869 = add nsw i32 %863, %868
  %870 = load [5 x i32]*, [5 x i32]** %3, align 8
  %871 = getelementptr inbounds [5 x i32], [5 x i32]* %870, i64 3
  %872 = getelementptr inbounds [5 x i32], [5 x i32]* %871, i64 0, i64 3
  %873 = load i32, i32* %872, align 4
  %874 = mul nsw i32 %873, -16
  %875 = add nsw i32 %869, %874
  %876 = load [5 x i32]*, [5 x i32]** %3, align 8
  %877 = getelementptr inbounds [5 x i32], [5 x i32]* %876, i64 3
  %878 = getelementptr inbounds [5 x i32], [5 x i32]* %877, i64 0, i64 4
  %879 = load i32, i32* %878, align 4
  %880 = mul nsw i32 %879, -50
  %881 = add nsw i32 %875, %880
  %882 = load [5 x i32]*, [5 x i32]** %3, align 8
  %883 = getelementptr inbounds [5 x i32], [5 x i32]* %882, i64 4
  %884 = getelementptr inbounds [5 x i32], [5 x i32]* %883, i64 0, i64 0
  %885 = load i32, i32* %884, align 4
  %886 = mul nsw i32 %885, -112
  %887 = add nsw i32 %881, %886
  %888 = load [5 x i32]*, [5 x i32]** %3, align 8
  %889 = getelementptr inbounds [5 x i32], [5 x i32]* %888, i64 4
  %890 = getelementptr inbounds [5 x i32], [5 x i32]* %889, i64 0, i64 1
  %891 = load i32, i32* %890, align 4
  %892 = mul nsw i32 %891, -116
  %893 = add nsw i32 %887, %892
  %894 = load [5 x i32]*, [5 x i32]** %3, align 8
  %895 = getelementptr inbounds [5 x i32], [5 x i32]* %894, i64 4
  %896 = getelementptr inbounds [5 x i32], [5 x i32]* %895, i64 0, i64 2
  %897 = load i32, i32* %896, align 4
  %898 = mul nsw i32 %897, -54
  %899 = add nsw i32 %893, %898
  %900 = load [5 x i32]*, [5 x i32]** %3, align 8
  %901 = getelementptr inbounds [5 x i32], [5 x i32]* %900, i64 4
  %902 = getelementptr inbounds [5 x i32], [5 x i32]* %901, i64 0, i64 3
  %903 = load i32, i32* %902, align 4
  %904 = mul nsw i32 %903, 82
  %905 = add nsw i32 %899, %904
  %906 = load [5 x i32]*, [5 x i32]** %3, align 8
  %907 = getelementptr inbounds [5 x i32], [5 x i32]* %906, i64 4
  %908 = getelementptr inbounds [5 x i32], [5 x i32]* %907, i64 0, i64 4
  %909 = load i32, i32* %908, align 4
  %910 = mul nsw i32 %909, -72
  %911 = add nsw i32 %905, %910
  %912 = call i32 @relu_reg(i32 %911)
  %913 = mul nsw i32 %912, 32
  %914 = add nsw i32 %762, %913
  %915 = load [5 x i32]*, [5 x i32]** %3, align 8
  %916 = getelementptr inbounds [5 x i32], [5 x i32]* %915, i64 0
  %917 = getelementptr inbounds [5 x i32], [5 x i32]* %916, i64 0, i64 0
  %918 = load i32, i32* %917, align 4
  %919 = mul nsw i32 %918, 15
  %920 = load [5 x i32]*, [5 x i32]** %3, align 8
  %921 = getelementptr inbounds [5 x i32], [5 x i32]* %920, i64 0
  %922 = getelementptr inbounds [5 x i32], [5 x i32]* %921, i64 0, i64 1
  %923 = load i32, i32* %922, align 4
  %924 = mul nsw i32 %923, -77
  %925 = add nsw i32 %919, %924
  %926 = load [5 x i32]*, [5 x i32]** %3, align 8
  %927 = getelementptr inbounds [5 x i32], [5 x i32]* %926, i64 0
  %928 = getelementptr inbounds [5 x i32], [5 x i32]* %927, i64 0, i64 2
  %929 = load i32, i32* %928, align 4
  %930 = mul nsw i32 %929, 66
  %931 = add nsw i32 %925, %930
  %932 = load [5 x i32]*, [5 x i32]** %3, align 8
  %933 = getelementptr inbounds [5 x i32], [5 x i32]* %932, i64 0
  %934 = getelementptr inbounds [5 x i32], [5 x i32]* %933, i64 0, i64 3
  %935 = load i32, i32* %934, align 4
  %936 = mul nsw i32 %935, -90
  %937 = add nsw i32 %931, %936
  %938 = load [5 x i32]*, [5 x i32]** %3, align 8
  %939 = getelementptr inbounds [5 x i32], [5 x i32]* %938, i64 0
  %940 = getelementptr inbounds [5 x i32], [5 x i32]* %939, i64 0, i64 4
  %941 = load i32, i32* %940, align 4
  %942 = mul nsw i32 %941, -6
  %943 = add nsw i32 %937, %942
  %944 = load [5 x i32]*, [5 x i32]** %3, align 8
  %945 = getelementptr inbounds [5 x i32], [5 x i32]* %944, i64 1
  %946 = getelementptr inbounds [5 x i32], [5 x i32]* %945, i64 0, i64 0
  %947 = load i32, i32* %946, align 4
  %948 = mul nsw i32 %947, -30
  %949 = add nsw i32 %943, %948
  %950 = load [5 x i32]*, [5 x i32]** %3, align 8
  %951 = getelementptr inbounds [5 x i32], [5 x i32]* %950, i64 1
  %952 = getelementptr inbounds [5 x i32], [5 x i32]* %951, i64 0, i64 1
  %953 = load i32, i32* %952, align 4
  %954 = mul nsw i32 %953, -8
  %955 = add nsw i32 %949, %954
  %956 = load [5 x i32]*, [5 x i32]** %3, align 8
  %957 = getelementptr inbounds [5 x i32], [5 x i32]* %956, i64 1
  %958 = getelementptr inbounds [5 x i32], [5 x i32]* %957, i64 0, i64 2
  %959 = load i32, i32* %958, align 4
  %960 = mul nsw i32 %959, 81
  %961 = add nsw i32 %955, %960
  %962 = load [5 x i32]*, [5 x i32]** %3, align 8
  %963 = getelementptr inbounds [5 x i32], [5 x i32]* %962, i64 1
  %964 = getelementptr inbounds [5 x i32], [5 x i32]* %963, i64 0, i64 3
  %965 = load i32, i32* %964, align 4
  %966 = mul nsw i32 %965, 2
  %967 = add nsw i32 %961, %966
  %968 = load [5 x i32]*, [5 x i32]** %3, align 8
  %969 = getelementptr inbounds [5 x i32], [5 x i32]* %968, i64 1
  %970 = getelementptr inbounds [5 x i32], [5 x i32]* %969, i64 0, i64 4
  %971 = load i32, i32* %970, align 4
  %972 = mul nsw i32 %971, -110
  %973 = add nsw i32 %967, %972
  %974 = load [5 x i32]*, [5 x i32]** %3, align 8
  %975 = getelementptr inbounds [5 x i32], [5 x i32]* %974, i64 2
  %976 = getelementptr inbounds [5 x i32], [5 x i32]* %975, i64 0, i64 0
  %977 = load i32, i32* %976, align 4
  %978 = mul nsw i32 %977, -95
  %979 = add nsw i32 %973, %978
  %980 = load [5 x i32]*, [5 x i32]** %3, align 8
  %981 = getelementptr inbounds [5 x i32], [5 x i32]* %980, i64 2
  %982 = getelementptr inbounds [5 x i32], [5 x i32]* %981, i64 0, i64 1
  %983 = load i32, i32* %982, align 4
  %984 = mul nsw i32 %983, 59
  %985 = add nsw i32 %979, %984
  %986 = load [5 x i32]*, [5 x i32]** %3, align 8
  %987 = getelementptr inbounds [5 x i32], [5 x i32]* %986, i64 2
  %988 = getelementptr inbounds [5 x i32], [5 x i32]* %987, i64 0, i64 2
  %989 = load i32, i32* %988, align 4
  %990 = mul nsw i32 %989, 52
  %991 = add nsw i32 %985, %990
  %992 = load [5 x i32]*, [5 x i32]** %3, align 8
  %993 = getelementptr inbounds [5 x i32], [5 x i32]* %992, i64 2
  %994 = getelementptr inbounds [5 x i32], [5 x i32]* %993, i64 0, i64 3
  %995 = load i32, i32* %994, align 4
  %996 = mul nsw i32 %995, 15
  %997 = add nsw i32 %991, %996
  %998 = load [5 x i32]*, [5 x i32]** %3, align 8
  %999 = getelementptr inbounds [5 x i32], [5 x i32]* %998, i64 2
  %1000 = getelementptr inbounds [5 x i32], [5 x i32]* %999, i64 0, i64 4
  %1001 = load i32, i32* %1000, align 4
  %1002 = mul nsw i32 %1001, 55
  %1003 = add nsw i32 %997, %1002
  %1004 = load [5 x i32]*, [5 x i32]** %3, align 8
  %1005 = getelementptr inbounds [5 x i32], [5 x i32]* %1004, i64 3
  %1006 = getelementptr inbounds [5 x i32], [5 x i32]* %1005, i64 0, i64 0
  %1007 = load i32, i32* %1006, align 4
  %1008 = mul nsw i32 %1007, -33
  %1009 = add nsw i32 %1003, %1008
  %1010 = load [5 x i32]*, [5 x i32]** %3, align 8
  %1011 = getelementptr inbounds [5 x i32], [5 x i32]* %1010, i64 3
  %1012 = getelementptr inbounds [5 x i32], [5 x i32]* %1011, i64 0, i64 1
  %1013 = load i32, i32* %1012, align 4
  %1014 = mul nsw i32 %1013, 14
  %1015 = add nsw i32 %1009, %1014
  %1016 = load [5 x i32]*, [5 x i32]** %3, align 8
  %1017 = getelementptr inbounds [5 x i32], [5 x i32]* %1016, i64 3
  %1018 = getelementptr inbounds [5 x i32], [5 x i32]* %1017, i64 0, i64 2
  %1019 = load i32, i32* %1018, align 4
  %1020 = mul nsw i32 %1019, 58
  %1021 = add nsw i32 %1015, %1020
  %1022 = load [5 x i32]*, [5 x i32]** %3, align 8
  %1023 = getelementptr inbounds [5 x i32], [5 x i32]* %1022, i64 3
  %1024 = getelementptr inbounds [5 x i32], [5 x i32]* %1023, i64 0, i64 3
  %1025 = load i32, i32* %1024, align 4
  %1026 = mul nsw i32 %1025, 67
  %1027 = add nsw i32 %1021, %1026
  %1028 = load [5 x i32]*, [5 x i32]** %3, align 8
  %1029 = getelementptr inbounds [5 x i32], [5 x i32]* %1028, i64 3
  %1030 = getelementptr inbounds [5 x i32], [5 x i32]* %1029, i64 0, i64 4
  %1031 = load i32, i32* %1030, align 4
  %1032 = mul nsw i32 %1031, 86
  %1033 = add nsw i32 %1027, %1032
  %1034 = load [5 x i32]*, [5 x i32]** %3, align 8
  %1035 = getelementptr inbounds [5 x i32], [5 x i32]* %1034, i64 4
  %1036 = getelementptr inbounds [5 x i32], [5 x i32]* %1035, i64 0, i64 0
  %1037 = load i32, i32* %1036, align 4
  %1038 = mul nsw i32 %1037, -79
  %1039 = add nsw i32 %1033, %1038
  %1040 = load [5 x i32]*, [5 x i32]** %3, align 8
  %1041 = getelementptr inbounds [5 x i32], [5 x i32]* %1040, i64 4
  %1042 = getelementptr inbounds [5 x i32], [5 x i32]* %1041, i64 0, i64 1
  %1043 = load i32, i32* %1042, align 4
  %1044 = mul nsw i32 %1043, 48
  %1045 = add nsw i32 %1039, %1044
  %1046 = load [5 x i32]*, [5 x i32]** %3, align 8
  %1047 = getelementptr inbounds [5 x i32], [5 x i32]* %1046, i64 4
  %1048 = getelementptr inbounds [5 x i32], [5 x i32]* %1047, i64 0, i64 2
  %1049 = load i32, i32* %1048, align 4
  %1050 = mul nsw i32 %1049, -13
  %1051 = add nsw i32 %1045, %1050
  %1052 = load [5 x i32]*, [5 x i32]** %3, align 8
  %1053 = getelementptr inbounds [5 x i32], [5 x i32]* %1052, i64 4
  %1054 = getelementptr inbounds [5 x i32], [5 x i32]* %1053, i64 0, i64 3
  %1055 = load i32, i32* %1054, align 4
  %1056 = mul nsw i32 %1055, -15
  %1057 = add nsw i32 %1051, %1056
  %1058 = load [5 x i32]*, [5 x i32]** %3, align 8
  %1059 = getelementptr inbounds [5 x i32], [5 x i32]* %1058, i64 4
  %1060 = getelementptr inbounds [5 x i32], [5 x i32]* %1059, i64 0, i64 4
  %1061 = load i32, i32* %1060, align 4
  %1062 = mul nsw i32 %1061, 66
  %1063 = add nsw i32 %1057, %1062
  %1064 = call i32 @relu_reg(i32 %1063)
  %1065 = mul nsw i32 %1064, -95
  %1066 = add nsw i32 %914, %1065
  %1067 = load [5 x i32]*, [5 x i32]** %3, align 8
  %1068 = getelementptr inbounds [5 x i32], [5 x i32]* %1067, i64 0
  %1069 = getelementptr inbounds [5 x i32], [5 x i32]* %1068, i64 0, i64 0
  %1070 = load i32, i32* %1069, align 4
  %1071 = mul nsw i32 %1070, 33
  %1072 = load [5 x i32]*, [5 x i32]** %3, align 8
  %1073 = getelementptr inbounds [5 x i32], [5 x i32]* %1072, i64 0
  %1074 = getelementptr inbounds [5 x i32], [5 x i32]* %1073, i64 0, i64 1
  %1075 = load i32, i32* %1074, align 4
  %1076 = mul nsw i32 %1075, 82
  %1077 = add nsw i32 %1071, %1076
  %1078 = load [5 x i32]*, [5 x i32]** %3, align 8
  %1079 = getelementptr inbounds [5 x i32], [5 x i32]* %1078, i64 0
  %1080 = getelementptr inbounds [5 x i32], [5 x i32]* %1079, i64 0, i64 2
  %1081 = load i32, i32* %1080, align 4
  %1082 = mul nsw i32 %1081, 67
  %1083 = add nsw i32 %1077, %1082
  %1084 = load [5 x i32]*, [5 x i32]** %3, align 8
  %1085 = getelementptr inbounds [5 x i32], [5 x i32]* %1084, i64 0
  %1086 = getelementptr inbounds [5 x i32], [5 x i32]* %1085, i64 0, i64 3
  %1087 = load i32, i32* %1086, align 4
  %1088 = mul nsw i32 %1087, 30
  %1089 = add nsw i32 %1083, %1088
  %1090 = load [5 x i32]*, [5 x i32]** %3, align 8
  %1091 = getelementptr inbounds [5 x i32], [5 x i32]* %1090, i64 0
  %1092 = getelementptr inbounds [5 x i32], [5 x i32]* %1091, i64 0, i64 4
  %1093 = load i32, i32* %1092, align 4
  %1094 = mul nsw i32 %1093, -2
  %1095 = add nsw i32 %1089, %1094
  %1096 = load [5 x i32]*, [5 x i32]** %3, align 8
  %1097 = getelementptr inbounds [5 x i32], [5 x i32]* %1096, i64 1
  %1098 = getelementptr inbounds [5 x i32], [5 x i32]* %1097, i64 0, i64 0
  %1099 = load i32, i32* %1098, align 4
  %1100 = mul nsw i32 %1099, 65
  %1101 = add nsw i32 %1095, %1100
  %1102 = load [5 x i32]*, [5 x i32]** %3, align 8
  %1103 = getelementptr inbounds [5 x i32], [5 x i32]* %1102, i64 1
  %1104 = getelementptr inbounds [5 x i32], [5 x i32]* %1103, i64 0, i64 1
  %1105 = load i32, i32* %1104, align 4
  %1106 = mul nsw i32 %1105, 120
  %1107 = add nsw i32 %1101, %1106
  %1108 = load [5 x i32]*, [5 x i32]** %3, align 8
  %1109 = getelementptr inbounds [5 x i32], [5 x i32]* %1108, i64 1
  %1110 = getelementptr inbounds [5 x i32], [5 x i32]* %1109, i64 0, i64 2
  %1111 = load i32, i32* %1110, align 4
  %1112 = mul nsw i32 %1111, -13
  %1113 = add nsw i32 %1107, %1112
  %1114 = load [5 x i32]*, [5 x i32]** %3, align 8
  %1115 = getelementptr inbounds [5 x i32], [5 x i32]* %1114, i64 1
  %1116 = getelementptr inbounds [5 x i32], [5 x i32]* %1115, i64 0, i64 3
  %1117 = load i32, i32* %1116, align 4
  %1118 = mul nsw i32 %1117, 18
  %1119 = add nsw i32 %1113, %1118
  %1120 = load [5 x i32]*, [5 x i32]** %3, align 8
  %1121 = getelementptr inbounds [5 x i32], [5 x i32]* %1120, i64 1
  %1122 = getelementptr inbounds [5 x i32], [5 x i32]* %1121, i64 0, i64 4
  %1123 = load i32, i32* %1122, align 4
  %1124 = mul nsw i32 %1123, 5
  %1125 = add nsw i32 %1119, %1124
  %1126 = load [5 x i32]*, [5 x i32]** %3, align 8
  %1127 = getelementptr inbounds [5 x i32], [5 x i32]* %1126, i64 2
  %1128 = getelementptr inbounds [5 x i32], [5 x i32]* %1127, i64 0, i64 0
  %1129 = load i32, i32* %1128, align 4
  %1130 = mul nsw i32 %1129, 104
  %1131 = add nsw i32 %1125, %1130
  %1132 = load [5 x i32]*, [5 x i32]** %3, align 8
  %1133 = getelementptr inbounds [5 x i32], [5 x i32]* %1132, i64 2
  %1134 = getelementptr inbounds [5 x i32], [5 x i32]* %1133, i64 0, i64 1
  %1135 = load i32, i32* %1134, align 4
  %1136 = mul nsw i32 %1135, -119
  %1137 = add nsw i32 %1131, %1136
  %1138 = load [5 x i32]*, [5 x i32]** %3, align 8
  %1139 = getelementptr inbounds [5 x i32], [5 x i32]* %1138, i64 2
  %1140 = getelementptr inbounds [5 x i32], [5 x i32]* %1139, i64 0, i64 2
  %1141 = load i32, i32* %1140, align 4
  %1142 = mul nsw i32 %1141, -7
  %1143 = add nsw i32 %1137, %1142
  %1144 = load [5 x i32]*, [5 x i32]** %3, align 8
  %1145 = getelementptr inbounds [5 x i32], [5 x i32]* %1144, i64 2
  %1146 = getelementptr inbounds [5 x i32], [5 x i32]* %1145, i64 0, i64 3
  %1147 = load i32, i32* %1146, align 4
  %1148 = mul nsw i32 %1147, 71
  %1149 = add nsw i32 %1143, %1148
  %1150 = load [5 x i32]*, [5 x i32]** %3, align 8
  %1151 = getelementptr inbounds [5 x i32], [5 x i32]* %1150, i64 2
  %1152 = getelementptr inbounds [5 x i32], [5 x i32]* %1151, i64 0, i64 4
  %1153 = load i32, i32* %1152, align 4
  %1154 = mul nsw i32 %1153, 107
  %1155 = add nsw i32 %1149, %1154
  %1156 = load [5 x i32]*, [5 x i32]** %3, align 8
  %1157 = getelementptr inbounds [5 x i32], [5 x i32]* %1156, i64 3
  %1158 = getelementptr inbounds [5 x i32], [5 x i32]* %1157, i64 0, i64 0
  %1159 = load i32, i32* %1158, align 4
  %1160 = mul nsw i32 %1159, 24
  %1161 = add nsw i32 %1155, %1160
  %1162 = load [5 x i32]*, [5 x i32]** %3, align 8
  %1163 = getelementptr inbounds [5 x i32], [5 x i32]* %1162, i64 3
  %1164 = getelementptr inbounds [5 x i32], [5 x i32]* %1163, i64 0, i64 1
  %1165 = load i32, i32* %1164, align 4
  %1166 = mul nsw i32 %1165, 82
  %1167 = add nsw i32 %1161, %1166
  %1168 = load [5 x i32]*, [5 x i32]** %3, align 8
  %1169 = getelementptr inbounds [5 x i32], [5 x i32]* %1168, i64 3
  %1170 = getelementptr inbounds [5 x i32], [5 x i32]* %1169, i64 0, i64 2
  %1171 = load i32, i32* %1170, align 4
  %1172 = mul nsw i32 %1171, -96
  %1173 = add nsw i32 %1167, %1172
  %1174 = load [5 x i32]*, [5 x i32]** %3, align 8
  %1175 = getelementptr inbounds [5 x i32], [5 x i32]* %1174, i64 3
  %1176 = getelementptr inbounds [5 x i32], [5 x i32]* %1175, i64 0, i64 3
  %1177 = load i32, i32* %1176, align 4
  %1178 = mul nsw i32 %1177, -104
  %1179 = add nsw i32 %1173, %1178
  %1180 = load [5 x i32]*, [5 x i32]** %3, align 8
  %1181 = getelementptr inbounds [5 x i32], [5 x i32]* %1180, i64 3
  %1182 = getelementptr inbounds [5 x i32], [5 x i32]* %1181, i64 0, i64 4
  %1183 = load i32, i32* %1182, align 4
  %1184 = mul nsw i32 %1183, -121
  %1185 = add nsw i32 %1179, %1184
  %1186 = load [5 x i32]*, [5 x i32]** %3, align 8
  %1187 = getelementptr inbounds [5 x i32], [5 x i32]* %1186, i64 4
  %1188 = getelementptr inbounds [5 x i32], [5 x i32]* %1187, i64 0, i64 0
  %1189 = load i32, i32* %1188, align 4
  %1190 = mul nsw i32 %1189, 65
  %1191 = add nsw i32 %1185, %1190
  %1192 = load [5 x i32]*, [5 x i32]** %3, align 8
  %1193 = getelementptr inbounds [5 x i32], [5 x i32]* %1192, i64 4
  %1194 = getelementptr inbounds [5 x i32], [5 x i32]* %1193, i64 0, i64 1
  %1195 = load i32, i32* %1194, align 4
  %1196 = mul nsw i32 %1195, 97
  %1197 = add nsw i32 %1191, %1196
  %1198 = load [5 x i32]*, [5 x i32]** %3, align 8
  %1199 = getelementptr inbounds [5 x i32], [5 x i32]* %1198, i64 4
  %1200 = getelementptr inbounds [5 x i32], [5 x i32]* %1199, i64 0, i64 2
  %1201 = load i32, i32* %1200, align 4
  %1202 = mul nsw i32 %1201, 83
  %1203 = add nsw i32 %1197, %1202
  %1204 = load [5 x i32]*, [5 x i32]** %3, align 8
  %1205 = getelementptr inbounds [5 x i32], [5 x i32]* %1204, i64 4
  %1206 = getelementptr inbounds [5 x i32], [5 x i32]* %1205, i64 0, i64 3
  %1207 = load i32, i32* %1206, align 4
  %1208 = mul nsw i32 %1207, 46
  %1209 = add nsw i32 %1203, %1208
  %1210 = load [5 x i32]*, [5 x i32]** %3, align 8
  %1211 = getelementptr inbounds [5 x i32], [5 x i32]* %1210, i64 4
  %1212 = getelementptr inbounds [5 x i32], [5 x i32]* %1211, i64 0, i64 4
  %1213 = load i32, i32* %1212, align 4
  %1214 = mul nsw i32 %1213, -84
  %1215 = add nsw i32 %1209, %1214
  %1216 = call i32 @relu_reg(i32 %1215)
  %1217 = mul nsw i32 %1216, -50
  %1218 = add nsw i32 %1066, %1217
  %1219 = load [5 x i32]*, [5 x i32]** %3, align 8
  %1220 = getelementptr inbounds [5 x i32], [5 x i32]* %1219, i64 0
  %1221 = getelementptr inbounds [5 x i32], [5 x i32]* %1220, i64 0, i64 0
  %1222 = load i32, i32* %1221, align 4
  %1223 = mul nsw i32 %1222, -29
  %1224 = load [5 x i32]*, [5 x i32]** %3, align 8
  %1225 = getelementptr inbounds [5 x i32], [5 x i32]* %1224, i64 0
  %1226 = getelementptr inbounds [5 x i32], [5 x i32]* %1225, i64 0, i64 1
  %1227 = load i32, i32* %1226, align 4
  %1228 = mul nsw i32 %1227, 7
  %1229 = add nsw i32 %1223, %1228
  %1230 = load [5 x i32]*, [5 x i32]** %3, align 8
  %1231 = getelementptr inbounds [5 x i32], [5 x i32]* %1230, i64 0
  %1232 = getelementptr inbounds [5 x i32], [5 x i32]* %1231, i64 0, i64 2
  %1233 = load i32, i32* %1232, align 4
  %1234 = mul nsw i32 %1233, -70
  %1235 = add nsw i32 %1229, %1234
  %1236 = load [5 x i32]*, [5 x i32]** %3, align 8
  %1237 = getelementptr inbounds [5 x i32], [5 x i32]* %1236, i64 0
  %1238 = getelementptr inbounds [5 x i32], [5 x i32]* %1237, i64 0, i64 3
  %1239 = load i32, i32* %1238, align 4
  %1240 = mul nsw i32 %1239, 38
  %1241 = add nsw i32 %1235, %1240
  %1242 = load [5 x i32]*, [5 x i32]** %3, align 8
  %1243 = getelementptr inbounds [5 x i32], [5 x i32]* %1242, i64 0
  %1244 = getelementptr inbounds [5 x i32], [5 x i32]* %1243, i64 0, i64 4
  %1245 = load i32, i32* %1244, align 4
  %1246 = mul nsw i32 %1245, -90
  %1247 = add nsw i32 %1241, %1246
  %1248 = load [5 x i32]*, [5 x i32]** %3, align 8
  %1249 = getelementptr inbounds [5 x i32], [5 x i32]* %1248, i64 1
  %1250 = getelementptr inbounds [5 x i32], [5 x i32]* %1249, i64 0, i64 0
  %1251 = load i32, i32* %1250, align 4
  %1252 = mul nsw i32 %1251, -15
  %1253 = add nsw i32 %1247, %1252
  %1254 = load [5 x i32]*, [5 x i32]** %3, align 8
  %1255 = getelementptr inbounds [5 x i32], [5 x i32]* %1254, i64 1
  %1256 = getelementptr inbounds [5 x i32], [5 x i32]* %1255, i64 0, i64 1
  %1257 = load i32, i32* %1256, align 4
  %1258 = mul nsw i32 %1257, -32
  %1259 = add nsw i32 %1253, %1258
  %1260 = load [5 x i32]*, [5 x i32]** %3, align 8
  %1261 = getelementptr inbounds [5 x i32], [5 x i32]* %1260, i64 1
  %1262 = getelementptr inbounds [5 x i32], [5 x i32]* %1261, i64 0, i64 2
  %1263 = load i32, i32* %1262, align 4
  %1264 = mul nsw i32 %1263, 37
  %1265 = add nsw i32 %1259, %1264
  %1266 = load [5 x i32]*, [5 x i32]** %3, align 8
  %1267 = getelementptr inbounds [5 x i32], [5 x i32]* %1266, i64 1
  %1268 = getelementptr inbounds [5 x i32], [5 x i32]* %1267, i64 0, i64 3
  %1269 = load i32, i32* %1268, align 4
  %1270 = mul nsw i32 %1269, 36
  %1271 = add nsw i32 %1265, %1270
  %1272 = load [5 x i32]*, [5 x i32]** %3, align 8
  %1273 = getelementptr inbounds [5 x i32], [5 x i32]* %1272, i64 1
  %1274 = getelementptr inbounds [5 x i32], [5 x i32]* %1273, i64 0, i64 4
  %1275 = load i32, i32* %1274, align 4
  %1276 = mul nsw i32 %1275, -62
  %1277 = add nsw i32 %1271, %1276
  %1278 = load [5 x i32]*, [5 x i32]** %3, align 8
  %1279 = getelementptr inbounds [5 x i32], [5 x i32]* %1278, i64 2
  %1280 = getelementptr inbounds [5 x i32], [5 x i32]* %1279, i64 0, i64 0
  %1281 = load i32, i32* %1280, align 4
  %1282 = mul nsw i32 %1281, -125
  %1283 = add nsw i32 %1277, %1282
  %1284 = load [5 x i32]*, [5 x i32]** %3, align 8
  %1285 = getelementptr inbounds [5 x i32], [5 x i32]* %1284, i64 2
  %1286 = getelementptr inbounds [5 x i32], [5 x i32]* %1285, i64 0, i64 1
  %1287 = load i32, i32* %1286, align 4
  %1288 = mul nsw i32 %1287, -46
  %1289 = add nsw i32 %1283, %1288
  %1290 = load [5 x i32]*, [5 x i32]** %3, align 8
  %1291 = getelementptr inbounds [5 x i32], [5 x i32]* %1290, i64 2
  %1292 = getelementptr inbounds [5 x i32], [5 x i32]* %1291, i64 0, i64 2
  %1293 = load i32, i32* %1292, align 4
  %1294 = mul nsw i32 %1293, -70
  %1295 = add nsw i32 %1289, %1294
  %1296 = load [5 x i32]*, [5 x i32]** %3, align 8
  %1297 = getelementptr inbounds [5 x i32], [5 x i32]* %1296, i64 2
  %1298 = getelementptr inbounds [5 x i32], [5 x i32]* %1297, i64 0, i64 3
  %1299 = load i32, i32* %1298, align 4
  %1300 = mul nsw i32 %1299, 37
  %1301 = add nsw i32 %1295, %1300
  %1302 = load [5 x i32]*, [5 x i32]** %3, align 8
  %1303 = getelementptr inbounds [5 x i32], [5 x i32]* %1302, i64 2
  %1304 = getelementptr inbounds [5 x i32], [5 x i32]* %1303, i64 0, i64 4
  %1305 = load i32, i32* %1304, align 4
  %1306 = mul nsw i32 %1305, -73
  %1307 = add nsw i32 %1301, %1306
  %1308 = load [5 x i32]*, [5 x i32]** %3, align 8
  %1309 = getelementptr inbounds [5 x i32], [5 x i32]* %1308, i64 3
  %1310 = getelementptr inbounds [5 x i32], [5 x i32]* %1309, i64 0, i64 0
  %1311 = load i32, i32* %1310, align 4
  %1312 = mul nsw i32 %1311, -34
  %1313 = add nsw i32 %1307, %1312
  %1314 = load [5 x i32]*, [5 x i32]** %3, align 8
  %1315 = getelementptr inbounds [5 x i32], [5 x i32]* %1314, i64 3
  %1316 = getelementptr inbounds [5 x i32], [5 x i32]* %1315, i64 0, i64 1
  %1317 = load i32, i32* %1316, align 4
  %1318 = mul nsw i32 %1317, -87
  %1319 = add nsw i32 %1313, %1318
  %1320 = load [5 x i32]*, [5 x i32]** %3, align 8
  %1321 = getelementptr inbounds [5 x i32], [5 x i32]* %1320, i64 3
  %1322 = getelementptr inbounds [5 x i32], [5 x i32]* %1321, i64 0, i64 2
  %1323 = load i32, i32* %1322, align 4
  %1324 = mul nsw i32 %1323, -75
  %1325 = add nsw i32 %1319, %1324
  %1326 = load [5 x i32]*, [5 x i32]** %3, align 8
  %1327 = getelementptr inbounds [5 x i32], [5 x i32]* %1326, i64 3
  %1328 = getelementptr inbounds [5 x i32], [5 x i32]* %1327, i64 0, i64 3
  %1329 = load i32, i32* %1328, align 4
  %1330 = mul nsw i32 %1329, 71
  %1331 = add nsw i32 %1325, %1330
  %1332 = load [5 x i32]*, [5 x i32]** %3, align 8
  %1333 = getelementptr inbounds [5 x i32], [5 x i32]* %1332, i64 3
  %1334 = getelementptr inbounds [5 x i32], [5 x i32]* %1333, i64 0, i64 4
  %1335 = load i32, i32* %1334, align 4
  %1336 = mul nsw i32 %1335, -77
  %1337 = add nsw i32 %1331, %1336
  %1338 = load [5 x i32]*, [5 x i32]** %3, align 8
  %1339 = getelementptr inbounds [5 x i32], [5 x i32]* %1338, i64 4
  %1340 = getelementptr inbounds [5 x i32], [5 x i32]* %1339, i64 0, i64 0
  %1341 = load i32, i32* %1340, align 4
  %1342 = mul nsw i32 %1341, 53
  %1343 = add nsw i32 %1337, %1342
  %1344 = load [5 x i32]*, [5 x i32]** %3, align 8
  %1345 = getelementptr inbounds [5 x i32], [5 x i32]* %1344, i64 4
  %1346 = getelementptr inbounds [5 x i32], [5 x i32]* %1345, i64 0, i64 1
  %1347 = load i32, i32* %1346, align 4
  %1348 = mul nsw i32 %1347, 37
  %1349 = add nsw i32 %1343, %1348
  %1350 = load [5 x i32]*, [5 x i32]** %3, align 8
  %1351 = getelementptr inbounds [5 x i32], [5 x i32]* %1350, i64 4
  %1352 = getelementptr inbounds [5 x i32], [5 x i32]* %1351, i64 0, i64 2
  %1353 = load i32, i32* %1352, align 4
  %1354 = mul nsw i32 %1353, -103
  %1355 = add nsw i32 %1349, %1354
  %1356 = load [5 x i32]*, [5 x i32]** %3, align 8
  %1357 = getelementptr inbounds [5 x i32], [5 x i32]* %1356, i64 4
  %1358 = getelementptr inbounds [5 x i32], [5 x i32]* %1357, i64 0, i64 3
  %1359 = load i32, i32* %1358, align 4
  %1360 = mul nsw i32 %1359, -13
  %1361 = add nsw i32 %1355, %1360
  %1362 = load [5 x i32]*, [5 x i32]** %3, align 8
  %1363 = getelementptr inbounds [5 x i32], [5 x i32]* %1362, i64 4
  %1364 = getelementptr inbounds [5 x i32], [5 x i32]* %1363, i64 0, i64 4
  %1365 = load i32, i32* %1364, align 4
  %1366 = mul nsw i32 %1365, -114
  %1367 = add nsw i32 %1361, %1366
  %1368 = call i32 @relu_reg(i32 %1367)
  %1369 = mul nsw i32 %1368, -23
  %1370 = add nsw i32 %1218, %1369
  %1371 = load [5 x i32]*, [5 x i32]** %3, align 8
  %1372 = getelementptr inbounds [5 x i32], [5 x i32]* %1371, i64 0
  %1373 = getelementptr inbounds [5 x i32], [5 x i32]* %1372, i64 0, i64 0
  %1374 = load i32, i32* %1373, align 4
  %1375 = mul nsw i32 %1374, 67
  %1376 = load [5 x i32]*, [5 x i32]** %3, align 8
  %1377 = getelementptr inbounds [5 x i32], [5 x i32]* %1376, i64 0
  %1378 = getelementptr inbounds [5 x i32], [5 x i32]* %1377, i64 0, i64 1
  %1379 = load i32, i32* %1378, align 4
  %1380 = mul nsw i32 %1379, 42
  %1381 = add nsw i32 %1375, %1380
  %1382 = load [5 x i32]*, [5 x i32]** %3, align 8
  %1383 = getelementptr inbounds [5 x i32], [5 x i32]* %1382, i64 0
  %1384 = getelementptr inbounds [5 x i32], [5 x i32]* %1383, i64 0, i64 2
  %1385 = load i32, i32* %1384, align 4
  %1386 = mul nsw i32 %1385, 41
  %1387 = add nsw i32 %1381, %1386
  %1388 = load [5 x i32]*, [5 x i32]** %3, align 8
  %1389 = getelementptr inbounds [5 x i32], [5 x i32]* %1388, i64 0
  %1390 = getelementptr inbounds [5 x i32], [5 x i32]* %1389, i64 0, i64 3
  %1391 = load i32, i32* %1390, align 4
  %1392 = mul nsw i32 %1391, -123
  %1393 = add nsw i32 %1387, %1392
  %1394 = load [5 x i32]*, [5 x i32]** %3, align 8
  %1395 = getelementptr inbounds [5 x i32], [5 x i32]* %1394, i64 0
  %1396 = getelementptr inbounds [5 x i32], [5 x i32]* %1395, i64 0, i64 4
  %1397 = load i32, i32* %1396, align 4
  %1398 = mul nsw i32 %1397, -92
  %1399 = add nsw i32 %1393, %1398
  %1400 = load [5 x i32]*, [5 x i32]** %3, align 8
  %1401 = getelementptr inbounds [5 x i32], [5 x i32]* %1400, i64 1
  %1402 = getelementptr inbounds [5 x i32], [5 x i32]* %1401, i64 0, i64 0
  %1403 = load i32, i32* %1402, align 4
  %1404 = mul nsw i32 %1403, 10
  %1405 = add nsw i32 %1399, %1404
  %1406 = load [5 x i32]*, [5 x i32]** %3, align 8
  %1407 = getelementptr inbounds [5 x i32], [5 x i32]* %1406, i64 1
  %1408 = getelementptr inbounds [5 x i32], [5 x i32]* %1407, i64 0, i64 1
  %1409 = load i32, i32* %1408, align 4
  %1410 = mul nsw i32 %1409, -77
  %1411 = add nsw i32 %1405, %1410
  %1412 = load [5 x i32]*, [5 x i32]** %3, align 8
  %1413 = getelementptr inbounds [5 x i32], [5 x i32]* %1412, i64 1
  %1414 = getelementptr inbounds [5 x i32], [5 x i32]* %1413, i64 0, i64 2
  %1415 = load i32, i32* %1414, align 4
  %1416 = mul nsw i32 %1415, 75
  %1417 = add nsw i32 %1411, %1416
  %1418 = load [5 x i32]*, [5 x i32]** %3, align 8
  %1419 = getelementptr inbounds [5 x i32], [5 x i32]* %1418, i64 1
  %1420 = getelementptr inbounds [5 x i32], [5 x i32]* %1419, i64 0, i64 3
  %1421 = load i32, i32* %1420, align 4
  %1422 = mul nsw i32 %1421, 96
  %1423 = add nsw i32 %1417, %1422
  %1424 = load [5 x i32]*, [5 x i32]** %3, align 8
  %1425 = getelementptr inbounds [5 x i32], [5 x i32]* %1424, i64 1
  %1426 = getelementptr inbounds [5 x i32], [5 x i32]* %1425, i64 0, i64 4
  %1427 = load i32, i32* %1426, align 4
  %1428 = mul nsw i32 %1427, -51
  %1429 = add nsw i32 %1423, %1428
  %1430 = load [5 x i32]*, [5 x i32]** %3, align 8
  %1431 = getelementptr inbounds [5 x i32], [5 x i32]* %1430, i64 2
  %1432 = getelementptr inbounds [5 x i32], [5 x i32]* %1431, i64 0, i64 0
  %1433 = load i32, i32* %1432, align 4
  %1434 = mul nsw i32 %1433, 109
  %1435 = add nsw i32 %1429, %1434
  %1436 = load [5 x i32]*, [5 x i32]** %3, align 8
  %1437 = getelementptr inbounds [5 x i32], [5 x i32]* %1436, i64 2
  %1438 = getelementptr inbounds [5 x i32], [5 x i32]* %1437, i64 0, i64 1
  %1439 = load i32, i32* %1438, align 4
  %1440 = mul nsw i32 %1439, -74
  %1441 = add nsw i32 %1435, %1440
  %1442 = load [5 x i32]*, [5 x i32]** %3, align 8
  %1443 = getelementptr inbounds [5 x i32], [5 x i32]* %1442, i64 2
  %1444 = getelementptr inbounds [5 x i32], [5 x i32]* %1443, i64 0, i64 2
  %1445 = load i32, i32* %1444, align 4
  %1446 = mul nsw i32 %1445, -7
  %1447 = add nsw i32 %1441, %1446
  %1448 = load [5 x i32]*, [5 x i32]** %3, align 8
  %1449 = getelementptr inbounds [5 x i32], [5 x i32]* %1448, i64 2
  %1450 = getelementptr inbounds [5 x i32], [5 x i32]* %1449, i64 0, i64 3
  %1451 = load i32, i32* %1450, align 4
  %1452 = mul nsw i32 %1451, -122
  %1453 = add nsw i32 %1447, %1452
  %1454 = load [5 x i32]*, [5 x i32]** %3, align 8
  %1455 = getelementptr inbounds [5 x i32], [5 x i32]* %1454, i64 2
  %1456 = getelementptr inbounds [5 x i32], [5 x i32]* %1455, i64 0, i64 4
  %1457 = load i32, i32* %1456, align 4
  %1458 = mul nsw i32 %1457, 67
  %1459 = add nsw i32 %1453, %1458
  %1460 = load [5 x i32]*, [5 x i32]** %3, align 8
  %1461 = getelementptr inbounds [5 x i32], [5 x i32]* %1460, i64 3
  %1462 = getelementptr inbounds [5 x i32], [5 x i32]* %1461, i64 0, i64 0
  %1463 = load i32, i32* %1462, align 4
  %1464 = mul nsw i32 %1463, 47
  %1465 = add nsw i32 %1459, %1464
  %1466 = load [5 x i32]*, [5 x i32]** %3, align 8
  %1467 = getelementptr inbounds [5 x i32], [5 x i32]* %1466, i64 3
  %1468 = getelementptr inbounds [5 x i32], [5 x i32]* %1467, i64 0, i64 1
  %1469 = load i32, i32* %1468, align 4
  %1470 = mul nsw i32 %1469, 22
  %1471 = add nsw i32 %1465, %1470
  %1472 = load [5 x i32]*, [5 x i32]** %3, align 8
  %1473 = getelementptr inbounds [5 x i32], [5 x i32]* %1472, i64 3
  %1474 = getelementptr inbounds [5 x i32], [5 x i32]* %1473, i64 0, i64 2
  %1475 = load i32, i32* %1474, align 4
  %1476 = mul nsw i32 %1475, -68
  %1477 = add nsw i32 %1471, %1476
  %1478 = load [5 x i32]*, [5 x i32]** %3, align 8
  %1479 = getelementptr inbounds [5 x i32], [5 x i32]* %1478, i64 3
  %1480 = getelementptr inbounds [5 x i32], [5 x i32]* %1479, i64 0, i64 3
  %1481 = load i32, i32* %1480, align 4
  %1482 = mul nsw i32 %1481, 38
  %1483 = add nsw i32 %1477, %1482
  %1484 = load [5 x i32]*, [5 x i32]** %3, align 8
  %1485 = getelementptr inbounds [5 x i32], [5 x i32]* %1484, i64 3
  %1486 = getelementptr inbounds [5 x i32], [5 x i32]* %1485, i64 0, i64 4
  %1487 = load i32, i32* %1486, align 4
  %1488 = mul nsw i32 %1487, 29
  %1489 = add nsw i32 %1483, %1488
  %1490 = load [5 x i32]*, [5 x i32]** %3, align 8
  %1491 = getelementptr inbounds [5 x i32], [5 x i32]* %1490, i64 4
  %1492 = getelementptr inbounds [5 x i32], [5 x i32]* %1491, i64 0, i64 0
  %1493 = load i32, i32* %1492, align 4
  %1494 = mul nsw i32 %1493, 115
  %1495 = add nsw i32 %1489, %1494
  %1496 = load [5 x i32]*, [5 x i32]** %3, align 8
  %1497 = getelementptr inbounds [5 x i32], [5 x i32]* %1496, i64 4
  %1498 = getelementptr inbounds [5 x i32], [5 x i32]* %1497, i64 0, i64 1
  %1499 = load i32, i32* %1498, align 4
  %1500 = mul nsw i32 %1499, -121
  %1501 = add nsw i32 %1495, %1500
  %1502 = load [5 x i32]*, [5 x i32]** %3, align 8
  %1503 = getelementptr inbounds [5 x i32], [5 x i32]* %1502, i64 4
  %1504 = getelementptr inbounds [5 x i32], [5 x i32]* %1503, i64 0, i64 2
  %1505 = load i32, i32* %1504, align 4
  %1506 = mul nsw i32 %1505, 36
  %1507 = add nsw i32 %1501, %1506
  %1508 = load [5 x i32]*, [5 x i32]** %3, align 8
  %1509 = getelementptr inbounds [5 x i32], [5 x i32]* %1508, i64 4
  %1510 = getelementptr inbounds [5 x i32], [5 x i32]* %1509, i64 0, i64 3
  %1511 = load i32, i32* %1510, align 4
  %1512 = mul nsw i32 %1511, -49
  %1513 = add nsw i32 %1507, %1512
  %1514 = load [5 x i32]*, [5 x i32]** %3, align 8
  %1515 = getelementptr inbounds [5 x i32], [5 x i32]* %1514, i64 4
  %1516 = getelementptr inbounds [5 x i32], [5 x i32]* %1515, i64 0, i64 4
  %1517 = load i32, i32* %1516, align 4
  %1518 = mul nsw i32 %1517, 85
  %1519 = add nsw i32 %1513, %1518
  %1520 = call i32 @relu_reg(i32 %1519)
  %1521 = mul nsw i32 %1520, 46
  %1522 = add nsw i32 %1370, %1521
  %1523 = icmp sgt i32 %1522, 0
  br i1 %1523, label %1524, label %1525

1524:                                             ; preds = %1
  store i32 1, i32* %2, align 4
  br label %1526

1525:                                             ; preds = %1
  store i32 0, i32* %2, align 4
  br label %1526

1526:                                             ; preds = %1525, %1524
  %1527 = load i32, i32* %2, align 4
  ret i32 %1527
}

; Function Attrs: noinline nounwind ssp uwtable
define i32 @main() #0 {
  %1 = alloca i32, align 4
  %2 = alloca i32, align 4
  %3 = alloca [5 x [5 x i32]], align 16
  %4 = alloca i32, align 4
  %5 = alloca i32, align 4
  store i32 0, i32* %1, align 4
  %6 = call i32 (...) @getint()
  store i32 %6, i32* %2, align 4
  br label %7

7:                                                ; preds = %37, %0
  %8 = load i32, i32* %2, align 4
  %9 = icmp sgt i32 %8, 0
  br i1 %9, label %10, label %40

10:                                               ; preds = %7
  store i32 0, i32* %4, align 4
  br label %11

11:                                               ; preds = %28, %10
  %12 = load i32, i32* %4, align 4
  %13 = icmp slt i32 %12, 5
  br i1 %13, label %14, label %31

14:                                               ; preds = %11
  store i32 0, i32* %5, align 4
  br label %15

15:                                               ; preds = %18, %14
  %16 = load i32, i32* %5, align 4
  %17 = icmp slt i32 %16, 5
  br i1 %17, label %18, label %28

18:                                               ; preds = %15
  %19 = call i32 (...) @getint()
  %20 = load i32, i32* %4, align 4
  %21 = sext i32 %20 to i64
  %22 = getelementptr inbounds [5 x [5 x i32]], [5 x [5 x i32]]* %3, i64 0, i64 %21
  %23 = load i32, i32* %5, align 4
  %24 = sext i32 %23 to i64
  %25 = getelementptr inbounds [5 x i32], [5 x i32]* %22, i64 0, i64 %24
  store i32 %19, i32* %25, align 4
  %26 = load i32, i32* %5, align 4
  %27 = add nsw i32 %26, 1
  store i32 %27, i32* %5, align 4
  br label %15, !llvm.loop !6

28:                                               ; preds = %15
  %29 = load i32, i32* %4, align 4
  %30 = add nsw i32 %29, 1
  store i32 %30, i32* %4, align 4
  br label %11, !llvm.loop !8

31:                                               ; preds = %11
  %32 = getelementptr inbounds [5 x [5 x i32]], [5 x [5 x i32]]* %3, i64 0, i64 0
  %33 = call i32 @model([5 x i32]* %32)
  %34 = icmp ne i32 %33, 0
  br i1 %34, label %35, label %36

35:                                               ; preds = %31
  call void @putch(i32 99)
  call void @putch(i32 97)
  call void @putch(i32 116)
  call void @putch(i32 10)
  br label %37

36:                                               ; preds = %31
  call void @putch(i32 100)
  call void @putch(i32 111)
  call void @putch(i32 103)
  call void @putch(i32 10)
  br label %37

37:                                               ; preds = %36, %35
  %38 = load i32, i32* %2, align 4
  %39 = sub nsw i32 %38, 1
  store i32 %39, i32* %2, align 4
  br label %7, !llvm.loop !9

40:                                               ; preds = %7
  ret i32 0
}

declare i32 @getint(...) #1

declare void @putch(i32) #1

attributes #0 = { noinline nounwind ssp uwtable "darwin-stkchk-strong-link" "frame-pointer"="all" "min-legal-vector-width"="0" "no-trapping-math"="true" "probe-stack"="___chkstk_darwin" "stack-protector-buffer-size"="8" "target-cpu"="penryn" "target-features"="+cx16,+cx8,+fxsr,+mmx,+sahf,+sse,+sse2,+sse3,+sse4.1,+ssse3,+x87" "tune-cpu"="generic" }
attributes #1 = { "darwin-stkchk-strong-link" "frame-pointer"="all" "no-trapping-math"="true" "probe-stack"="___chkstk_darwin" "stack-protector-buffer-size"="8" "target-cpu"="penryn" "target-features"="+cx16,+cx8,+fxsr,+mmx,+sahf,+sse,+sse2,+sse3,+sse4.1,+ssse3,+x87" "tune-cpu"="generic" }

!llvm.module.flags = !{!0, !1, !2, !3, !4}
!llvm.ident = !{!5}

!0 = !{i32 2, !"SDK Version", [2 x i32] [i32 12, i32 3]}
!1 = !{i32 1, !"wchar_size", i32 4}
!2 = !{i32 7, !"PIC Level", i32 2}
!3 = !{i32 7, !"uwtable", i32 1}
!4 = !{i32 7, !"frame-pointer", i32 2}
!5 = !{!"Apple clang version 14.0.0 (clang-1400.0.29.102)"}
!6 = distinct !{!6, !7}
!7 = !{!"llvm.loop.mustprogress"}
!8 = distinct !{!8, !7}
!9 = distinct !{!9, !7}
